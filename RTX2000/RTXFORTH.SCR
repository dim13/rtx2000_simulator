\                                                08:10 01/16/89                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 \ NUCLEUS LOAD BLOCK                             12:18 01/23/89                                                                 { 9 110 THRU                                                     ( see screen 3 for a breakdown of screen content)              '' RESET  OLD>TA  U2/  HEX A000 ! DECIMAL                       111 130 THRU  ( see screen 3)                                                                                                   LINKS } PRUNE ( Addr left by PRUNE)                              CR  HEX DUP A000 - U. DECIMAL                                   .( bytes compiled.  Max is 4000h.)  SWAP 16 CMOVE                                                                                                                                                                                                                                                                                                                                                                                                              \ RECOMPILE FORTH NUCLEUS                        14:10 01/03/89                                                                 ( METACOMPILER )  6 8 THRU                                                                                                      : '' ' ;                                                                                                                        HEX  000 4000 FF FILL   A020 H' ! F000 RAM ! DECIMAL                                                                            1 LOAD                                                                                                                          HEX                                                             : TEST   0 COLD !  A000 >R ;                                    DECIMAL                                                                                                                                                                                                                                                          \ screen contents - for information                              9 14  THRU  ( host words)      15 17  THRU  ( variables)       18 20  THRU  ( miscellaneous)   21 23  THRU  ( double)          24 32  THRU  ( i/o)             33 35  THRU  ( math operators)  36 41  THRU  ( strings)         42 47  THRU  ( numbers)         48 50  THRU  ( disk)            51 59  THRU  ( interpreter)     60 62  THRU  ( files)           63 65  THRU  ( dict mgmt)       66 71  THRU  ( compiler)        72 77  THRU  ( vocabularies)    78 80  THRU  ( extended memory) 81 83  THRU  ( interrupts)      84 86  THRU  ( stack)           87 89  THRU  ( asic bus)        90 92  THRU  ( dumps)           93 101 THRU  ( compiler)       102 104 THRU  ( multitasker)    105 107 THRU  ( power up test)  108 110 THRU  ( reset)                                          111 125 THRU  ( compiler)                                       126 129 THRU  ( control structures)                             130 LOAD      ( load,thrusave status of host dict )                                                                                     VARIABLE H'  ( dictionary pointer for target system )           HEX  A000 ,  DECIMAL   ( offset for target system )                                                                             : {  DA @ HERE  H' 2@ H ! DA !  H' 2! ;                                                                                         : }                                                               STATE @  IF  H' @  H' 2+ @ - U2/ , REPLACE THEN { ;             IMMEDIATE                                                                                                                                                                                     \ METACOMPILER                                   16:38 01/05/89 VARIABLE RAM                                                    : GAP  ALLOT ;                                                  : ALLOT  RAM +! ;                                               : VARIABLE  RAM @ CONSTANT  2 ALLOT ;                           : 2VARIABLE RAM @ CONSTANT  4 ALLOT ;                           : OLD, , ;                                                      : HHERE HERE 2- >TA ; IMMEDIATE                                 : OLDSM SMUDGE ;                                                : OLDCREATE CREATE ;                                            : OLDIMM IMMEDIATE ;                                            : OLD>TA  >TA ;                                                                                                                                                                                                                                                                                                                 \ METACOMPILER                                   15:31 01/03/89 HEX                                                             : SCAN ( a1-a2)             ( search for a target word )          @  BEGIN DUP  1 A000 WITHIN  WHILE @  REPEAT ;                                                                                : TRIM ( a1 a2 - a2 )   ( scans a linked list for target words)   DUP  >R >TA           ( compute target address )                SWAP  !  R>           ( store corrected address )               DUP LINK>NAME DUP C@ 0DF AND SWAP C! ; ( clear smudge )       DECIMAL                                                         : CLIP ( a)         ( relinks target words to separate dict )     DUP BEGIN DUP SCAN DUP WHILE TRIM REPEAT SWAP ! @ , ;                                                                         : PRUNE             ( relink the target dictionary )             { HERE #THREADS 0 DO  HEADS   I 2* +  CLIP LOOP {               SAVE HEADS #THREADS CELLS CMOVE KEEPH @ H ! ( rest host dic) ; \ do  loop  +loop                                13:56 03/15/89 \ Kernel starts here                                            { : do }  SWAP R> SWAP >R SWAP >R >R; ;                                                                                         { : loop }  R> ( ret addr)  R> 1+ DUP  ( index+1)                 R@ SWAP >R  XOR IF 0 ELSE -1 THEN  IF  2+ THEN  >R; ;                                                                         { : +loop  ( inc) }                                               SR@ SWAP  R> SWAP SR!                ( SAVE RET ADR, INC->SR)   R> R@ 1-  OVER SR@ + DUP >R OVER     ( RETURN STACK UPDATED)    SR@ 0<  IF > NOT >R > ELSE > >R > NOT THEN   ( DECR/INCR)       R> AND  IF 2+ THEN  SWAP SR!  >R; ;  DECIMAL                                                                                                                                                                                                                                                                                  \                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \ host words                                     13:56 09/20/88                                                                 { : DO  ( limit index )  LEAVING @  0 LEAVING !                   COMPILE do  HERE ;   IMMEDIATE }                                                                                              { : LOOP COMPILE loop HERE SWAP BRANCH , FIXUP HERE FIX-LEAVES    COMPILE R>DROP  COMPILE R>DROP  1 -RETURN ! ; IMMEDIATE }                                                                     { : +LOOP COMPILE +loop HERE SWAP BRANCH , FIXUP HERE FIX-LEAVES  COMPILE R>DROP   COMPILE R>DROP   1 -RETURN ! ; IMMEDIATE }                                                                   { : LEAVE  HERE LEAVING @ , LEAVING ! ;  IMMEDIATE }                                                                                                                                                                                                                                                                            \ HOST CONTROL STRUCTURES                        13:56 09/20/88 { : IF  ( -- a)  HERE  ?BRANCH , ;  IMMEDIATE                   : ELSE ( a1 -- a2) HERE  BRANCH , SWAP HERE FIXUP ; IMMEDIATE   : THEN ( a)  HERE  FIXUP  1 -OPT !  ;  IMMEDIATE                                                                                : BEGIN ( - a) LEAVING @ 0 LEAVING ! HERE 1 -OPT ! ; IMMEDIATE  : AGAIN  ( a->)  HERE SWAP  BRANCH ,  FIXUP HERE FIX-LEAVES ;       IMMEDIATE                                                   : REPEAT ( BEGIN WHILE --) >R SWAP HERE SWAP BRANCH , FIXUP       HERE FIX-LEAVES  R> HERE FIXUP 1 -OPT ! ;  IMMEDIATE          : UNTIL  ( a->)  HERE SWAP ?BRANCH ,  FIXUP HERE FIX-LEAVES ;       IMMEDIATE                                                   : WHILE  ( LEAVE-ptr BEGIN -- BEGIN LEAVE-ptr WHILE)              SWAP  HERE ?BRANCH , ;  IMMEDIATE                              }                                                                                                                              \ HOST CONTROL STRUCTURES                        16:29 01/05/89 {                                                               HEX                                                             : FOR  COMPILE >R HERE ; IMMEDIATE SMUDGE                       : NEXT  HERE 9800 , SWAP FIXUP ; IMMEDIATE  SMUDGE              : RECURSE  LAST @ 2+ >TA    U2/ , ; IMMEDIATE }                 DECIMAL                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         \ VARIABLES                                      08:23 01/10/89 VARIABLE INT-VECTORS 32 17 * ALLOT                              VARIABLE BASE                                                   VARIABLE BLK                                                    VARIABLE SCR                                                    VARIABLE -OPT                                                   VARIABLE -RETURN                                                VARIABLE 'IDLE                                                  VARIABLE STATE                                                  VARIABLE BLOCK#                                                 VARIABLE DA                                                     VARIABLE VLINK                                                  VARIABLE UPD                                                    VARIABLE FENCE                                                  VARIABLE CHAR-BUF                                               VARIABLE COLD                                                   \ VARIABLES                                      10:26 03/15/89 VARIABLE SPAN                                                   VARIABLE PTR                                                    VARIABLE LAST-ADDR                                              VARIABLE #TIB                                                   VARIABLE H                                                      VARIABLE OPTIMIZING                                             VARIABLE STEP                                                   VARIABLE DOUBLE                                                 VARIABLE 'EMIT                                                  VARIABLE 'KEY                                                   VARIABLE 'EMIT?                                                 VARIABLE 'KEY?                                                  CREATE LINKS 16 GAP                                             VARIABLE THREADS 14 ALLOT                                       VARIABLE DISK-BUFFER  1022 ALLOT                                \ VARIABLES                                      13:31 03/15/89 VARIABLE DEL                                                    VARIABLE LEAVING                                                VARIABLE TIB  80 ALLOT                                          VARIABLE #OUT                                                   VARIABLE >IN                                                    VARIABLE HEADS 14 ALLOT                                         VARIABLE CURRENT                                                VARIABLE CONTEXT                                                VARIABLE 'SEARCH 14 ALLOT                                       VARIABLE 'ALWAYS                                                VARIABLE BASE-ADR                                               8 CONSTANT #THREADS             8 CONSTANT #SEARCH              2 CONSTANT CELL                32 CONSTANT BL                   HEX A020 CONSTANT RETURN DECIMAL                                VARIABLE LAST                                                   \ MISCELLANEOUS                                  14:43 01/20/89 0 CONSTANT FALSE               -1 CONSTANT TRUE                 : 0=  ( n -- f)  IF  FALSE EXIT  THEN  TRUE ;                   : 0<> ( n -- f)  IF  TRUE EXIT  THEN  FALSE ;                   : =  ( n n -- f)  XOR 0= ;                                      : <> ( n n -- f)  = NOT ;                                       : <=  ( n n -- f)  > NOT ;                                      : >=  ( n n -- f)  < NOT ;                                      : ?DUP  ( n -- n n OR 0 -- 0)  DUP  IF DUP THEN ;               : ABS  ( n -- u)  DUP 0<  IF NEGATE THEN ;                      : CELL+ ( n -- n+2) 2+ ; MACRO                                  : CELLS ( n -- n*2) 2* ; MACRO                                  : FORTH-83 ;                                                                                                                                                                                                                                                    \ MISCELLANEOUS                                  11:21 03/15/89 : ROT  ( a b c -- b c a)  >R SWAP R> SWAP ;                     : -ROT  ( a b c -- b c a)  SWAP >R SWAP R> ;                    : +!  ( n a --)  DUP >R  @ SWAP + R> ! ;                        : U<  ( u u -- f)  - DROP 0 0 -c ;                              : 0>  ( n -- f)  0 > ; MACRO                                    : WITHIN ( n l h -- f)  OVER - >R - R> U< ;                     : TUCK  ( n1 n2 - n2 n1 n2)  SWAP OVER ;                        : CYCLES  ( n)  FOR NEXT ;                                      : OFF ( a)  FALSE SWAP ! ;                                      : ON ( aperators                                    09:48 01/23/89 : 2DROP  ( d -)  DROP DROP ; MACRO                              : 2DUP  ( d - d d)  OVER OVER ; MACRO                           : 2SWAP  ( d1 d2 - d2 d1)  ROT >R ROT R> ;                      : 2OVER  ( d1 d2 - d1 d2 d1)   2>R 2DUP   2R> 2SWAP ;           : 2ROT  ( d1 d2 d3 - d2 d3 d1)   2>R 2SWAP   2R> 2SWAP ;        : 2@  ( a - d)  @+2 @+2 DROP SWAP ;                             : 2!  ( d a)  !+2 !+2 DROP ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                    \ Double operators                               10:38 09/28/88 : D+  ( d d -- d)  >R SWAP >R + R> R> +c ;                      : D-  ( d d -- d)  >R SWAP >R - R> R> -c ;                                                                                      : D<  ( d1 d2 -- f)  D- NIP 0< ;                                                                                                : DNEGATE ( d -- -d)  SWAP NEGATE SWAP 0SWAP-c ;                                                                                : D0=  ( d -- f)  OR 0= ;                                       : D=  ( d1 d2 -- f)  SWAP >R XOR  SWAP  R> XOR D0= ;            : D<>  ( d d -- f)  D= NOT ;                                    : D0<  ( d -- f)  0. D< ;                                                                                                                                                                                                                                                                                                       \ Double operators                               10:38 09/28/88 : DU<  ( d d - f)                                                 ROT 2DUP =  IF  -ROT  DNEGATE  D+ 0<                                        ELSE  SWAP U< NIP  THEN  NIP ;                                                                                    : DABS  ( d -- d)  DUP 0< IF DNEGATE THEN ;                                                                                     : DMAX  ( d d - d)  2OVER 2OVER D<  IF 2SWAP THEN  2DROP ;      : DMIN  ( d d - d)  2OVER 2OVER D< NOT  IF 2SWAP THEN  2DROP ;                                                                  : D>  ( d d - f)  2SWAP D< ;                                                                                                                                                                                                                                                                                                                                                                    \ 8250 uart                                      14:56 01/20/89 HEX                                                             : REG@  ( r -- n)                                                  0 018 G!                  ( Quiet pattern )                     DUP  018 G!               ( Select uart register )              NOP                       ( wait 1 PCLK cycle )                 1000 OR DUP 018 G!        ( DISTR [RD] true )                   NOP NOP NOP               ( wait 3 PCLK cycles )                018 G@ 00FF AND           ( read data from In port 0 )          SWAP                                                            EFFF AND 018 G!           ( DISTR [RD] false )                  0000  018 G! NOP ;        ( Quiet pattern )                                                                                  DECIMAL                                                                                                                                                                                         \ 8250 uart                                      14:56 01/20/89 HEX                                                             : REG!  ( n r)                                                     0 018 G!                 ( Quiet pattern )                      DUP 018 G! NOP           ( Select UART register )               OR                       ( Build data/reg mask, select uart)    2000 OR  DUP             ( Set write bit )                      018 G!  NOP NOP          ( DOSTR [WR] true )                    DFFF  AND                ( Clear write bit )                    018 G!  NOP              ( DOSTR [WR] false )                   0 018 G!  NOP   ;        ( Quiet pattern )                                                                                   DECIMAL                                                                                                                                                                                                                                                         \ KEY  EMIT                                      10:00 01/23/89                                                                 : KEY   'KEY @ EXECUTE ;                                        : EMIT  'EMIT @ EXECUTE  1 #OUT +! ;                                                                                            : KEY?   'KEY? @ EXECUTE ;                                      : EMIT?  'EMIT? @ EXECUTE ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \ 8250 KEY                                       10:09 03/08/89 HEX                                                                                                                             : <KEY?> ( -- f)                                                  CHAR-BUF @ -1 =       \ Check if char buffer has char           IF B00 REG@  1 AND    \ Test DR pin                             ELSE  TRUE  THEN ;                                                                                                            : <SKEY>  ( -- c)                    \ non-multitasking key       BEGIN  KEY?  UNTIL                 \ Wait until char received   CHAR-BUF @ -1 <>                   \ Check if char in buffer    IF  CHAR-BUF @  -1 CHAR-BUF !      \ Get char from buffer       ELSE  0100 REG@  THEN ;            \ Read data sent by host                                                                   DECIMAL                                                                                                                         \ 8250 EMIT                                      14:27 03/08/89 HEX                                                             : <EMIT?> ( -- f)  B00 REG@ 20 AND  ;  ( Test TBRE pin )                                                                        : <SEMIT> ( n)           \ non-multitasking emit                  KEY?                                                            IF  100 REG@  DUP 13 =    ( check if char is xoff)                  IF  DROP  BEGIN KEY 11 = UNTIL   \ wait for xon                 ELSE  CHAR-BUF !  THEN  THEN     \ store char in buffer     BEGIN  EMIT?  UNTIL           ( Test TBRE pin )                 0100 REG! ;                   ( send character )                                                                              DECIMAL                                                                                                                                                                                                                                                         \ uart cont'd - init-8250                        13:33 03/27/89  HEX                                                            : INIT-8250                                                        080 0700 REG!    ( set DLAB bit )                               008 0100 REG!    ( set baud rate at 9600 )                      000 0300 REG!    ( 2.4576MHz / 16 = 8    ==>19200 baud )        003 0700 REG!    ( 8-data, 1-stop, no parity )                  003 0900 REG!    ( Disable OUT1, OUT2; clear RTS, DTR )         0100 REG@ DROP   ( clear receiver data ready interrupt )        0B00 REG@ DROP   ( clear receiver errors interrupt )            0D00 REG@ DROP   ( clear modem status changes interrupt )       0500 REG@ DROP   ( clear THRE interrupt )                       00 0300  REG! ;  ( enable no interrupts )                     DECIMAL                                                                                                                                                                                        \ SINGLE                                         16:27 01/05/89                                                                 : SINGLE   \ initializes non-multitasking key and emit            ['] <SKEY>  'KEY !     \ 8250 uart                              ['] <SEMIT> 'EMIT !                                             ['] <KEY?>  'KEY? !                                             ['] <EMIT?>  'EMIT? ! ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       \ SPACE  CR  TYPE                                14:45 02/22/89                                                                 : SPACE  BL EMIT ;                                              : SPACES ( n)                                                     -1 OVER <  IF  ?DUP IF  1-  FOR  SPACE  NEXT  THEN                         ELSE  DROP  THEN ;                                                                                                 : CR  13 EMIT 10 EMIT  0 #OUT ! ;                                                                                               : TYPE  ( a n)                                                    ?DUP                                                            IF  1- FOR  DUP C@ EMIT  1+  NEXT  THEN DROP ;                                                                                                                                                                                                                                                                                \ EXPECT                                         15:54 01/20/89                                                                 : EXPECT  ( a n)                                                  0 SPAN !      ( Clear count of chars received and stored )      SWAP PTR !    ( Save address where next char is to be stored)   BEGIN  KEY          DUP  8 =                                       IF  SPAN @                  ( Can't backspace if 1st char)        IF  -1 PTR +!  -1 SPAN +!  DUP EMIT  SPACE EMIT                 ELSE  DROP  THEN  0                                           ELSE   DUP 13 =                                                   IF ( cr)   SPACE DROP  1                                        ELSE  DUP   PTR @ C!  1 PTR +!   1 SPAN +!  EMIT                  DUP  SPAN @ =  THEN   THEN                               UNTIL   DROP  ;                                                                                                                                                                               \ Math Operators                                 11:13 09/06/88 HEX                                                             : CLR-CARRIES  0 0 [ A89A , ]  2DROP ;                          DECIMAL                                                                                                                         : N>U ( n -- u f)                                                 DUP 0< IF  NEGATE 1  ELSE  FALSE  THEN ;                      : D>UD ( d -- ud f)                                               DUP 0< IF  DNEGATE 1  ELSE  FALSE  THEN ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     \ Math operators                                 15:33 01/23/89 : 2SQRT ( ud -- root )                                            32768 SR!  0 MD!  D2*  S1'  13 OF( S'  S"  DROP ;             : SQRT  ( u -- root )  0 2SQRT ;                                                                                                : M*  ( n n -- d)                                                 STEP @ IF  CLR-CARRIES MD!  0 14 OF( *' *"                              ELSE  MULS MLR@ MHR@  THEN ;                          : * ( n n -- n)  M* DROP ;                                      : UM* ( u u -- ud)                                                STEP @ IF  CLR-CARRIES MD!  0 15 OF( U*'                                ELSE  MULU MLR@ MHR@  THEN ;                                                                                          : UM/MOD ( ud u -- ur uq)                                         MD! CLR-CARRIES D2*  U/1' 13 OF( U/'  U/" SWAP ;                                                                              \ Math operators                                 15:58 01/20/89 : */MOD ( n1 n2 n3 -- r q)                                        N>U >R >R   M*  D>UD R@ SWAP >R                                 UM/MOD  R> ( sign)  R> MD! ( divisor)  R@ ( sign) -             IF  ( signs are different)  OVER                                   IF  ( rem <> 0)  1+ SWAP MD@ SWAP - SWAP  THEN                  NEGATE  THEN                                                 R> IF  SWAP NEGATE SWAP THEN ;  ( rem gets sign of divisor )                                                                  : /MOD ( n1 n2 -- r q)  1 SWAP */MOD ;                          : MOD ( n1 n2 -- n3)  /MOD DROP ;                               : */ ( n1 n2 n3 -- n4)  */MOD NIP ;                             : / ( n1 n2 -- q)  /MOD NIP ;                                                                                                                                                                                                                                   \ Convert binary to ASCII string                 13:03 08/26/88 : HERE  ( -- a )  H @ ;                                                                                                         : PAD  ( -- a )  HERE 80 + ;                                                                                                    : HOLD ( c - ) ( Add c to output string )                         -1 PTR +!  PTR @ C! ;                                                                                                         : DIGIT ( n - c)  ( Convert a number n to its ASCII equivalent)   DUP  9 > 7 AND +  48 + ;                                                                                                      : SIGN  ( d - ) ( Append - sign to output string)                 D0<  IF 45 HOLD THEN ;                                                                                                                                                                                                                                        \ Convert binary to ASCII string                 13:39 10/11/88 : <#   PAD PTR !    ; ( Prepare to start conversion )                                                                           : #  ( d - d')   ( Convert one digit from d )                     0 BASE @  DUP >R  UM/MOD  R> SWAP >R UM/MOD SWAP R> SWAP        DIGIT HOLD ;                                                                                                                  : #S  ( d - 0) ( Convert d til reduced to 0 )                     BEGIN  #  2DUP D0=  UNTIL ;                                                                                                   : #>  ( d - a n)     ( Output the converted string to terminal)   2DROP  PTR @ PAD OVER - ;                                                                                                                                                                                                                                                                                                     \ OUTPUT                                         10:53 10/27/88                                                                 : N. ( n)  0 <# # # # # #>  TYPE 6 SPACES ;                     : B. ( c)  0 <# # # #>  TYPE SPACE ;                            : E. ( n)  0 <# # # # # # #>  TYPE 5 SPACES ;                                                                                   : (.)  ( n -- a c) ( Convert the number n to an ASCII string )    DUP 0< 2DUP >R >R DABS  <# #S  R> R> SIGN #> ;                                                                                : . ( n)     ( Free format display of number )                    (.) TYPE  SPACE ;                                                                                                             : ? ( a)  @ . ;                                                                                                                                                                                                                                                 \ OUTPUT                                         12:11 02/04/89                                                                 : U.R ( u n ) ( Format u in field of n colums, right-justified)   >R 0 <# #S #>  R> OVER -  SPACES  TYPE ;                      : U.  ( u)       ( Display unsigned integer free format)          0 U.R  SPACE ;                                                                                                                : (D.)  ( d -- a c)  2DUP >R >R DABS <# #S R> R> SIGN #> ;      : D.  ( d)  (D.) TYPE SPACE ;                                   : D.R  ( d n)  >R (D.) R>  OVER - SPACES TYPE ;                                                                                                                                                                                                                                                                                                                                                                                                                 \ CMOVE                                          10:23 02/22/89                                                                 : CMOVE  ( s d c) ?DUP IF                                         1-  FOR  >R C@+1 SWAP R> C!+1  NEXT THEN 2DROP ;                                                                              : CMOVE> ( s d ca - a n) DUP 1+  SWAP C@ ;                                                                                            : FILL  ( a c n) SWAP ?DUP  IF                                    >R  SWAP R> 1- OF( DUPC!+1 THEN  2DROP  ;                                                                                     : ERASE ( a c )  0 FILL ;                                       : BLANK  ( a c)  BL FILL ;                                                                                                      : MIN ( n n -- n)  2DUP > IF SWAP THEN DROP ;                   : MAX ( n n -- n)  2DUP < IF SWAP THEN DROP ;                                                                                                                                                                                                                                                                                   \ ABORT  ABORT"  ."                              14:50 01/25/89 HEX                                                             : ABORT                                                           -100 SPR@+ FF00 AND SPR!   \ Clear parameter stack              BLK @ ?DUP DROP            \  Leave SCR on stack                0  'IDLE @ EXECUTE    ; \ leave 0 on stack for stack underflow DECIMAL                                                                                                                        { : dot" }                                                        R> 1+ COUNT  2DUP TYPE DUP 1 AND + + >R ;                     { : abort" }  IF HERE 1+ COUNT TYPE SPACE R> 1+ COUNT TYPE ABORT   ELSE R> 1+ COUNT  DUP 1 AND + + >R THEN  ;                                                                                   {  : ABORT"  COMPILE abort" 34 STRING ; IMMEDIATE               : ."   COMPILE dot" 34 STRING ; IMMEDIATE }                                                                                     \ BAUD                                                          HEX                                                             : BAUD ( baud )                                                   25800. ROT UM/MOD NIP           \ calculate divisor             080 700 REG!                    \ set DLAB bit                      100 REG!                    \ set baud rate                 000 0300 REG!                                                   003 0700 REG! ;  ( 8-data, 1-stop, no parityc - n)                                                 DUP  039 >                                                      IF  DUP 040 >  7 AND  -  THEN                                   030 -  DUP BASE @ U<  ;                                                                                                      { : 10*+ } ( u1 c - u2)                                           SWAP BASE @ *  >R                                               SWAP BASE @ UM* R> +c >R + R>  ;                              DECIMAL                                                                                                                         : DECIMAL  10 BASE ! ; SMUDGE                                   : HEX 16 BASE ! ; SMUDGE                                        : BINARY 2 BASE ! ; SMUDGE                                                                                                      \ CONVERT  NUMBER                                13:30 09/08/88 HEX                                                             : CONVERT ( d1 a1 - d2 a2)                                        BEGIN  1+ DUP C@ -DIGIT  WHILE                                    SWAP >R  10*+  R>  REPEAT  DROP ;                                                                                           : NUMBER ( a - d)                                                 FALSE DOUBLE !   ( Single length )                              DUP 1+ C@  ASCII -  = DUP >R   IF 1+ THEN  >R 0 0 R>            BEGIN  CONVERT DUP C@ DUP                                          ASCII :  = SWAP DUP  ASCII +  > SWAP  ASCII 0  < AND OR         WHILE  TRUE DOUBLE ! ( double length ) REPEAT                C@ 20 = NOT  ABORT" Not defined "                               R>  IF  DNEGATE  THEN ;                                       DECIMAL                                                                                                                         \                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \ SEND   RECEIVE                                 10:25 01/24/89 { : CMD } ( n)  1 EMIT  EMIT ;                                  { : HANDSHAKE } KEY 6 = NOT ABORT" Function not performed " ;   { : .FILE-NAME } ( a) COUNT TYPE  0 EMIT ;                      HEX                                                             : .BLOCK# ( n)  BASE @ SWAP  10 BASE !                            0 <# # # # # #> TYPE  BASE ! ;                                                                                                : SEND ( a block#)  ASCII W CMD  .BLOCK#                          03FF  FOR  DUP C@ EMIT 1+  NEXT DROP  HANDSHAKE ;             : RECEIVE  ( a block#)  ASCII R CMD .BLOCK#  DUP DUP  0400 BLANK  0F  FOR  DUP BEGIN KEY DUP 0D - WHILE OVER C! 1+ REPEAT             2DROP 040 +  NEXT  DROP ;                                 DECIMAL                                                                                                                                                                                         \ FLUSH                                          12:14 02/04/89                                                                 : UPDATE  TRUE UPD ! ;                                                                                                          : SAVE-BUFFERS  DISK-BUFFER BLOCK# @ SEND  FALSE UPD ! ;        : EMPTY-BUFFERS  -1 BLOCK# !  FALSE UPD ! ;                     : FLUSH   BLOCK# @ -1 = NOT                                       IF SAVE-BUFFERS  -1 BLOCK# ! THEN ;                                                                                           : PRINT  ASCII P CMD ;                                          : DIR  ASCII D CMD ;                                            : BYE  ASCII X CMD ;                                            : MORE ( n)  ASCII M CMD  .BLOCK#  ;                                                                                                                                                                                                                            \ BUFFER BLOCK                                   10:25 01/24/89                                                                 : BUFFER ( n - a)                                                  DUP BLOCK# @ - UPD @ AND                                        IF  SAVE-BUFFERS  THEN                                          BLOCK# !  FALSE UPD !  DISK-BUFFER ;                                                                                         HEX                                                             : BLOCK  ( n -- a)                                                 DUP  8000 U< NOT OVER 0= OR  ABORT" Block # out of range "      DUP BLOCK# @ = IF DROP DISK-BUFFER  EXIT  THEN                  DUP  BUFFER SWAP  RECEIVE ;                                  DECIMAL                                                                                                                                                                                                                                                         \ DEPTH    ?STACK                                12:21 03/03/89 HEX                                                             : DEPTH  ( -- n)  0 SPR@+ 0FF AND 3 - ; ( read the stack ptr)   DECIMAL                                                                                                                         : ?STACK                                                          DEPTH 0< ABORT" Stack underflow " ;                                                                                           : ?COMP  STATE @ 0= ABORT" is compilation only{ : ?DEL } ( a1 n1 - a2 n2)        ( SKIP LEADING DELIMITERS )    BEGIN  SWAP DUP C@  DEL C@  =  DUP >R                              IF  1+  1 >IN +!  SWAP 1- ELSE SWAP THEN                        DUP 0=  R> 0=  OR   UNTIL ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                \ SAME?                                          08:29 02/22/89 HEX                                                             : SAME?  ( a1 a2 - f)   2DUP 1+  SWAP 1+                          2SWAP C@ 03F AND  SWAP C@ 03F AND                               OVER =              ( COMPARE COUNT BYTE)                       IF  -1 DEL !                                                       1- FOR 2DUP C@ 07F AND SWAP C@ 07F AND = ( compare ea byte)      IF  1+ SWAP 1+ SWAP ( inc addresses)                            ELSE  R>DROP 0 >R ( exit) 0 DEL !  THEN                       NEXT  2DROP  DEL @                                            ELSE  2DROP DROP FALSE  THEN ;                                DECIMAL                                                                                                                                                                                                                                                                                                                         \ >HASH  LETTERS                                 08:29 02/22/89 : >HASH ( saddr - n )  1+ C@ 7 AND 2* 2+ 16 MOD ;                                                                               { : LETTERS } ( a1 a2 n - a3 a4)                                  ?DUP                                                            IF  1-  FOR  DUP C@  DEL C@  = NOT                                   IF  SWAP >R DUP C@  R@  C!                                          1+ R> 1+  SWAP  1 >IN +!  THEN                             NEXT   1 >IN +!                                             THEN ;                                                                                                                                                                                                                                                                                                                                                                                                                                                        \ LINK>NAME  PREVIOUS  USE                                      HEX                                                             : LINK>NAME ( a1 - a2) BEGIN 1- DUP C@ 080 AND UNTIL ;          : PREVIOUS ( - a c) LAST @  LINK>NAME DUP C@ ;                  : USE ( a - ) PREVIOUS 1F AND 2+ DUP 1 AND + + 1+ ! ;           DECIMAL                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         \ WORD                                           14:31 01/23/89                                                                 : WORD  ( c - a)                                                   DEL C!  HERE   2+  DUP                                          >IN @ DUP >R  BLK @                                             IF  BLK @ BLOCK + 1024  ELSE  TIB +  #TIB @  THEN               R> - DUP 0>                                                     IF  ?DEL  LETTERS ELSE DROP THEN                                DROP BL OVER C!               ( ADD BLANK AFTER STRING)         SWAP-  HERE 1+ C!  HERE 1+ ;  ( CALCULATE AND STORE COUNT)                                                                                                                                                                                                                                                                                                                                                                                                   \ (FIND)                                         10:26 01/24/89 HEX                                                             { : (FIND) } ( thread a1 - a2 n)                                   DUP >HASH  ROT  + @ DUP                                         IF  BEGIN  DUP  >R  LINK>NAME OVER  SAME?                          IF  DROP R> DUP ( LINK>CODE)  2+ SWAP LINK>NAME C@                 040 AND IF  1 ( imm)                                                    ELSE  -1 ( not imm) THEN 1 ( found it)               ELSE  R> @  DUP                                                    IF  0  ELSE  DROP 0 1  ( end of link chain )  THEN           THEN   UNTIL  THEN  ;                                                                                                     DECIMAL                                                                                                                                                                                                                                                         \ FIND                                           15:32 02/22/89                                                                 : FIND  ( a1 - a2 n)                                               CONTEXT  #SEARCH 2+                                             1-  FOR  2DUP @ DUP                                                IF  SWAP  (FIND) DUP                                              IF  R>DROP 0 >R 2SWAP 2DROP                                     ELSE  2DROP 2+  THEN                                          ELSE  2DROP 2+  THEN   NEXT                                  DUP CONTEXT #SEARCH 2+ 2* + =  IF  DROP FALSE  THEN ;                                                                        : '  ( - a n)  BL WORD  FIND 0= ABORT" Not found " ;                                                                                                                                                                                                                                                                            \ INTERPRET                                      08:36 01/25/89                                                                 : INTERPRET                                                        BEGIN                                                             ?STACK                                                          BL WORD DUP C@                   ( Word count > 0 ?)            WHILE  FIND                      ( Find it )                       IF   EXECUTE                  ( Found it - execute)             ELSE  NUMBER                  ( Not found - number ?)             DOUBLE @ NOT IF  DROP  THEN   THEN                         REPEAT DROP   ;                    ( Word count = 0)                                                                       : QUERY                                                           TIB  80 EXPECT  0 BLK !  0 >IN !  SPAN @ #TIB ! ;                                                                                                                                             \ LIST  EDIT  OPEN  L  N  B  QX  CREATE-FILE     15:41 02/01/89 : LIST ( n)  ASCII L CMD  .BLOCK# ;                             { : ADVANCE } ( n)  ASCII A CMD  .BLOCK# ;                      : L  0 ADVANCE ;                                                : N  1 ADVANCE ;                                                : B  -1 ADVANCE ;                                               : EDIT ( n)  EMPTY-BUFFERS  ASCII E CMD  .BLOCK# ;              : QX ( n)   ASCII Q CMD  .BLOCK# ;                                                                                              { : ?FILE } ( - a)                                                BL WORD  DUP C@ 0=  ABORT" File or path name not entered" ;   : CD  ?FILE  ASCII C CMD  .FILE-NAME ;                          : OPEN  ?FILE  ASCII F CMD  .FILE-NAME ;                                                                                        : NEW-FILE   ?FILE  ASCII N CMD  .FILE-NAME ;                   : CREATE-FILE ( u)  NEW-FILE  1 MAX  MORE ;                     \ SELECT A DRIVE                                                                                                                : SELECT ASCII Z  CMD  .BLOCK# ;                                : A:  0 SELECT ;                                                : B:  1 SELECT ;                                                : C:  2 SELECT ;                                                : D:  3 SELECT ;                                                                                                                : OBLITERATE ( from count) ASCII O CMD SWAP .BLOCK# .BLOCK# ;   : BLOCKS ( from to count)   ASCII B CMD                           ROT .BLOCK#  SWAP .BLOCK#  .BLOCK# ;                                                                                          { : .H } ( n width)  BASE @ >R  16 BASE !                         >R 0 <# R>  1-  FOR # NEXT  #> TYPE  R> BASE ! ;                                                                                                                                              \ Intel hex file format                          15:41 02/22/89 { : .HEXLINE } ( a - a')                                          ." :10"  DUP 4 .H  ." 00"                                       16  16 0 DO ( a chk)                                               OVER BASE-ADR @ + I + C@  DUP 2 .H +  LOOP                   ( a chk)  OVER +  OVER 256 / +  NEGATE  255 AND                 2 .H  CR  16 + ;                                                                                                              { : .INTEL-HEX } ( a c)                                           SWAP  BASE-ADR !  0 SWAP                                        16 /MOD SWAP IF 1+ THEN  1-  FOR ( a) .HEXLINE HANDSHAKE NEXT   DROP   ." :00000001FF" CR  HANDSHAKE  ;                                                                                       : WRITE-HEX                                                       NEW-FILE  ASCII S CMD                                           .INTEL-HEX  26 EMIT  HANDSHAKE ;                              \ WORDS                                          12:16 02/22/89 HEX                                                             { : LARGEST } ( a n -- a' n')  OVER 0 SWAP ROT                   1-  FOR 2DUP @ U< IF -ROT 2DROP DUP @ OVER THEN CELL+ NEXT      DROP ;                                                         { : ANOTHER } ( - nfa)                                             THREADS #THREADS LARGEST DUP                                    IF  DUP @ ROT ! LINK>NAME  ELSE  NIP  THEN ;                                                                                 : WORDS  CR                                                      CONTEXT @  THREADS  #THREADS CELLS CMOVE                           BEGIN  KEY? IF 'IDLE @ EXECUTE THEN  ANOTHER ?DUP  WHILE           COUNT  01F AND  DUP #OUT @ + 04C >                              IF  CR  THEN  TYPE                                                 3 SPACES  REPEAT ;                                    DECIMAL                                                         \ CLIP  CHECK  CROP                              12:33 02/22/89   : CLIP   ( target link - )  \ all threads of a vocabulary       #THREADS  1-  FOR  SWAP OVER @                                     BEGIN  2DUP SWAP U< NOT  WHILE @  REPEAT                        >R OVER R> SWAP !  SWAP 2+  NEXT  2DROP ;                                                                                  : CHECK ( target vlink)   \ check if comp or search vocs deleted  OVER CURRENT @ U< CURRENT @ HEADS <> AND                        ABORT" Can't forget compilation vocabulary "  OVER 'SEARCH      #SEARCH 1- FOR  DUP @ 0<> IF DUP @ HEADS <> >R  2DUP @ U< R>       AND  ABORT" Can't forget search vocabulary" THEN 2+          NEXT  2DROP  ;                                                                                                                  : CROP   ( target - )  \ all vocabs and words thru target       VLINK @  BEGIN  2DUP U< WHILE @  CHECK  REPEAT VLINK !          VLINK @  BEGIN  DUP  WHILE  2DUP 2+ @ CLIP @  REPEAT  2DROP ; \ TRAILING                                       15:46 02/22/89                                                                 : -TRAILING  ( a n1 -- a n2)                                       2DUP + 1-  SWAP                                                   2-  FOR  DUP C@ BL =                                             IF  1-                                                          ELSE  R>DROP 0 >R  1+  THEN   NEXT                           OVER  -  ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   \ ALLOT  ,  C,  RECOVER                          08:43 01/25/89 HEX                                                             { : TALLOT } ( n)                                                 E000 HERE - OVER 0100 + > NOT ABORT" Dictionary full " H +! ;                                                                 : ,  ( n)                                                         STATE @  IF  HERE LAST-ADDR !  FALSE -OPT !                        -RETURN @ 1- 0 MAX -RETURN !  THEN  2 TALLOT  HERE 2- ! ;                                                                  : C, ( n)   1 TALLOT  0F AND  HERE 1- C! ;                                                                                      : RECOVER  -2 TALLOT ;  SMUDGE                                  DECIMAL                                                                                                                         { : INIT-LINKS }                                                 [  LINKS  >TA literal ] HEADS #THREADS CELLS CMOVE ;           \ CREATE                                         13:39 01/16/89 HEX                                                             : CREATE                                                           BL WORD DUP  DUP 1- 0 SWAP C!  DUP C@  2+                       DUP  1 AND +  022 MIN   TALLOT   ( Limit length to 31 chars)    DUP C@  01F MIN                  ( Count < 32 chars )           080 OR SWAP C!                   ( set count MSB)               HERE DUP >R SWAP >HASH                                          CURRENT @ + DUP @ , !            ( link)                        R> LAST ! BE27 , ;               ( PC@; )                    DECIMAL                                                                                                                                                                                                                                                                                                                                                                                         \ >TA  SHIFT  DOES>                          SMA 10:09 11/16/88                                                                 : >TA  ( a1 - a2)  DA @ - ;                                                                                                     : SHIFT ( value count -- value')                                   ?DUP                                                            IF  DUP 0<                                                        IF  NEGATE 1- OF( U2/                                           ELSE  1- OF( 2*  THEN                                         THEN ;                                                                                                                       { : DOES }  ( - )  R> U2/ USE ;                                 { : DOES>  COMPILE DOES  COMPILE R> ; IMMEDIATE }                                                                                                                                                                                                               \ STRING  LITERAL                                09:17 03/06/89                                                                 : STRING ( n)  WORD C@ DUP 1 AND + 2+ TALLOT ;                  HEX                                                             : literal ( n)                                                     DUP 0 <  OVER 1F > OR                                           IF  DE00 , ,  -2 LAST-ADDR +!                                   ELSE  BE40 OR , THEN ;                                                                                                       : LITERAL ( n)                                                    STATE @ IF  literalliteral ; IMMEDIATE  SMUDGE                  : [COMPILE]  ?COMP  '  >TA U2/ , ; IMMEDIATE SMUDGE             : COMPILE  R> DUP 2+ >R @ , ;                                                                                                   : ASCII                                                           BL WORD 1+ C@                                                   STATE @ IF  literal  THEN ; IMMEDIATE SMUDGE                                                                                  : ."   ?COMP                                                      COMPILE dot"  ASCII " STRING ;   IMMEDIATE SMUDGE             : ABORT"  ?COMP                                                   COMPILE abortan't forget a protected word "  DROP      ELSE 2-  LINK>NAME 1- DUP  CROP  H !  THEN  ;                 DECIMAL                                                                                                                         : EMPTY  FENCE @ DUP CROP H ! ;                                                                                                                                                                                                                                                                                                                                                                                                                                 \ VOCABULARY  DEFINTIONS                         15:47 01/19/89                                                                 : VOCABULARY                                                       CREATE  HERE  VLINK @ , VLINK !                                 HERE 2+ DUP , #THREADS CELLS DUP TALLOT ERASE                   DOES>  2+ @  CONTEXT ! ;                                                                                                     : DEFINITIONS ( -- )  CONTEXT @ CURRENT ! ;                                                                                     { : DOFORTH } R>  2+ @ CONTEXT ! ;                              : FORTH  DOFORTH [ 0 OLD, HEADS OLD, UNSMUDGE                                                                                                                                                                                                                                                                                                                                                   \ SEARCH ORDER WORDS                             12:24 02/22/89                                                                 : ALWAYS ( -- )  CONTEXT @ 'ALWAYS ! ;                          : ONLY ( -- )                                                     'SEARCH #SEARCH CELLS ERASE  CONTEXT @ 'SEARCH ! ;                                                                            : -CONT ( -- )  'SEARCH  #SEARCH 1-                               FOR  DUP @ CONTEXT @ =                                             IF  R>DROP 0 >R  DUP 2+  SWAP OVER  'SEARCH #SEARCH 2* +           SWAP-  CMOVE 0  0 'SEARCH #SEARCH 2* 2- + !                  ELSE  2+  THEN  NEXT  DROP ;                                                                                               : ALSO ( -- )  -CONT  'SEARCH DUP 2+ #SEARCH 2* 2- CMOVE>         CONTEXT @  'SEARCH ! ;                                        : -ALSO ( -- )  -CONT   'SEARCH @ CONTEXT ! ;                                                                                   \ PRINT VOCABULARY AND SEARCH ORDER              15:40 01/19/89                                                                 { : .ID } ( a)  COUNT 31 AND TYPE SPACE ;                                                                                       { : .VOC } ( a)  ?DUP  IF                                         DUP ['] FORTH 4 + @ = IF ." FORTH " DROP                           ELSE  8 - LINK>NAME .ID  THEN                                ELSE ." --- "  THEN ;                                                                                                         : .CONTEXT  CR ." CONTEXT: " CONTEXT @ .VOC ;                   : .CURRENT  CR ." CURRENT: " CURRENT @ .VOC ;                   : .ALWAYS   CR ." ALWAYS:  " 'ALWAYS @ .VOC ;                                                                                                                                                                                                                                                                                   \ PRINT VOCABULARY SEARCH INFO                   12:09 02/22/89                                                                 : .ORDER                                                            CR  ." ORDER:   "  'SEARCH                                      #SEARCH 1- FOR  DUP @  .VOC 2+  NEXT  DROP ;                                                                                : ORDER  .CONTEXT  .ORDER  .ALWAYS  .CURRENT ;                                                                                  : VOCS                                                             CR  VLINK @                                                     BEGIN  DUP  WHILE                                                  DUP  ['] FORTH 4 + @ = IF ." FORTH "                               ELSE DUP 4 - LINK>NAME .ID THEN                              @  REPEAT  DROP ;                                                                                                                                                                         \                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \ LONG FETCHES AND STORES   CMOVEL               09:12 02/22/89                                                                 : @L ( page addr - n)  DPR@ >R SELDPR SWAP DPR!  @  R> DPR! ;   : !L ( n page addr)    DPR@ >R SELDPR SWAP DPR!  !  R> DPR! ;   : C@L ( page addr - c) DPR@ >R SELDPR SWAP DPR!  C@  R> DPR! ;  : C!L ( c page addr)   DPR@ >R SELDPR SWAP DPR!  C!  R> DPR! ;                                                                  : CMOVEL ( sourcepage sourceoffset destpage destoffset c )        ?DUP IF                                                          1- FOR  2OVER C@L >R  2DUP  R>  -ROT  C!L                          1+ 2SWAP 1+ 2SWAP  NEXT                                     THEN 2DROP 2DROP  ;                                                                                                           : EXECUTEL ( p a)  >R  IPR! NOP ;                                                                                                                                                               \ DUMPL                                          13:56 02/22/89                                                                 : DUMPL ( page a n)                                                BASE @ >R  16 BASE !                                            16 /MOD SWAP 0>   IF 1+ THEN  CR                                9 SPACES  OVER  15 FOR DUP 15 AND 3 U.R 1+ NEXT DROP            2 SPACES  OVER  15 FOR DUP 15 AND 1 U.R 1+ NEXT DROP CR         10 SPACES   15 FOR  ." -- "  NEXT                               1- FOR  KEY? IF  256 REG@  ABORT" aborted" THEN                   CR DUP E. 2DUP                                                  15  FOR 2DUP C@L B. 1+  NEXT 2SWAP  SPACE                       15  FOR 2DUP C@L DUP DUP  32 <  SWAP  127 >  OR                     IF  DROP 46  THEN  EMIT  1+  NEXT 2DROP                   NEXT 2DROP R> BASE ! CR   ;                                                                                                                                                                  \                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \ INTERRUPTS                                     13:42 03/27/89 HEX                                                             : DISABLE ( interrupts)  0010 CR@OR  CR! ;                      : ENABLE ( interrupts)    CR@ CR! ;                             DECIMAL                                                                                                                         : PSUNDER  ." Parameter Stack Underflow " CR 0 ;                                                                                : >VECTOR  ( n--a)  15 SWAP-  2* 2* 2* 2* 2*  INT-VECTORS + ;   HEX                                                             : SET-INT-VECTORS                                                 RETURN  0D >VECTOR                                                0E FOR  2DUP  !  20 +  NEXT  2DROP  ( ! NOP RET )             ['] PSUNDER  2 >R  U2/ R@ >VECTOR ! RETURN R> >VECTOR 2+ ! ;  DECIMAL                                                                                                                         \ INTERRUPTS                                     10:30 03/03/89 HEX                                                             : !INTERRUPT  ( a n)                                              >VECTOR  DUP >R  SWAP  >TA U2/  SWAP !  RETURN  R> 2+ ! ;                                                                     : @INTERRUPT  ( n -- a)                                           >VECTOR  @  2* ;                                                                                                              : SET-INT-MASK                                                    IBC@ 0EFF AND  INT-VECTORS  F800 AND  OR  IBC!                  FFFE IMR!  ( FFFA = Parameter Stack Underflow unmasked )        F0F0 SLR!  ( Set stack limits register) ;                                                                                     DECIMAL                                                                                                                                                                                         \ MASK  UNMASK  MASKED?                          11:05 03/27/89 HEX                                                             : MASK ( n)  IMR@ OR IMR! ;                                     : UNMASK ( n)  -1 XOR IMR@ AND IMR! ;                           : MASKED? ( n - n')  IMR@ AND ;                                                                                                   2 CONSTANT EI1         400 CONSTANT EI3                         4 CONSTANT PSU         800 CONSTANT EI4                         8 CONSTANT RSU        1000 CONSTANT EI5                        10 CONSTANT PSV        2000 CONSTANT SWI                        20 CONSTANT RSV                                                 40 CONSTANT EI2                                                 80 CONSTANT TIMER0                                             100 CONSTANT TIMER1                                             200 CONSTANT TIMER2                                             DECIMAL                                                         \ PICK                                           08:49 01/19/89                                                                 : PICK  ( n -- s[n])                                              MD@ >R  SR@ >R           ( Save registers)                      MD! HERE  MD@    OF( !+2                                        2- DUP SR!                                                      MD@  OF( @-2 DROP SR@ @                                         R> SR!  R> MD! ;         ( restore regsn -- s[n])                                              ?DUP IF                                                            MD@ >R  SR@ >R           ( Save registers)                      MD! HERE  MD@    OF( !+2                                        2- DUP SR!                                                      2- MD@  1- OF( @-2 DROP SR@ @                                   R> SR!  R> MD!           ( restore regs)                     THEN ;                                                                                                                                                                                                                                                                                                                                                                                                                                                        \ OPTIMIZE  NOOPTIMIZE  NOHWMULT  HWMULT                                                                                        : OPTIMIZE  TRUE OPTIMIZING ! ;  \ Turn on optimization         : NOOPTIMIZE  FALSE OPTIMIZING ! ;  \ Turn off optimization                                                                     : NOHWMULT  TRUE STEP ! ;    \ Step math                        : HWMULT  FALSE STEP ! ;   \ Hardware multipliernterpreting          15:01 01/20/89 HEX                                                             { : (IO) }                                                       DUP 20 > OVER 0< OR                                             ABORT" literal value 0-31 must precede instruction"             OR , RETURN , -4 TALLOT HERE EXECUTE  ;                                                                                        : <G!> ( n g)    BE80 SWAP (IO) ;                               : <U!> ( n u)    CE80 SWAP (IO) ;                               : <G@> ( g - n)  BE00 SWAP (IO) ;                               : <U@> ( u - n)  CE00 SWAP (IO) ;                                                                                               DECIMAL                                                                                                                                                                                                                                                         \ [G@]  [G!]  [U@]  [U!] - Compiling             15:01 01/20/89 HEX                                                             { : LIT>INST } ( mask)                                            HERE 2- @ DUP  FFE0 AND BE40 = NOT                              ABORT" Literal value 0-31 must precede instruction "            -2 TALLOT   1F AND  OR  , ;                                                                                                   : [G!] ( n g)    BE80 LIT>INST ;                                : [U!] ( n u)    CE80 LIT>INST ;                                : [G@] ( g - n)  BE00 LIT>INST ;                                : [U@] ( u - n)  CE00 LIT>INST ;                                                                                                DECIMAL                                                                                                                                                                                                                                                         \ G@  G!  U@  U!                                 08:49 09/02/88                                                                 : G@ ( g - n )                                                    STATE @  IF [G@] ELSE <G@> THEN ; IMMEDIATE SMUDGE            : G! ( n g )                                                      STATE @  IF [G!] ELSE <G!> THEN ; IMMEDIATE SMUDGE            : U@ ( u - n )                                                    STATE @  IF [U@] ELSE <U@> THEN ; IMMEDIATE SMUDGE            : U! ( n u)                                                       STATE @  IF [U!] ELSE <U!> THEN ; IMMEDIATE SMUDGE                                                                                                                                                                                                                                                                                                                                                                                                            \ .REG                                           09:55 03/08/89 : .REG ( --- )                                                   SPR@  BASE @ >R 16 BASE !  MD@ >R  ( SPR) >R                    CR  6 SPACES  ." *** RTX Machine Registerstack underflow "                        CR  ?DUP IF                                                      1- FOR  R@  PICK  U.  NEXT  CR  THEN ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       \ DUMP                                           13:48 02/22/89                                                                 : DUMP ( a n)                                                     BASE @ -ROT  16 BASE !                                          16 /MOD SWAP 0>   IF 1+ THEN  CR                                9 SPACES  OVER  15 FOR DUP 15 AND 3 U.R 1+ NEXT DROP            2 SPACES  OVER  15 FOR DUP 15 AND 1 U.R 1+ NEXT DROP CR         10 SPACES   15 FOR  ." -- "  NEXT                               1- FOR  KEY? IF  256 REG@  ABORT" aborted"  THEN                  CR DUP E.  DUP                                                  15  FOR  DUP C@ B. 1+  NEXT  SWAP  SPACE                        15  FOR  DUP C@ DUP DUP  32 <  SWAP  127 >  OR                      IF  DROP 46  THEN  EMIT  1+  NEXT  DROP                   NEXT  DROP BASE ! CR   ;                                                                                                                                                                      \ BRANCHING                                      16:51 08/25/88 HEX                                                             { : BITS9-0 } ( a -- a')    ( extracts lower 9 addr bits)          03FF AND ;                                                   { : BITS15-10 } ( a -- a')  ( extracts page addr bits)             FC00 AND ;                                                   { : BIG-JUMP? } ( ai a -- ai a f)                                  2DUP  >TA  BITS15-10 SWAP  >TA  BITS15-10  -  ABS 0400 > ;                                                                   8800 CONSTANT ?BRANCH                                           9000 CONSTANT BRANCH                                            DECIMAL                                                                                                                                                                                                                                                                                                                         \ FIXUP                                          16:52 08/25/88 HEX                                                             : FIXUP  ( ai a -- )                                               BIG-JUMP?                                                       IF  ." Branch offset too large "  2DROP                         ELSE  DUP  >TA BITS9-0 2/ ( ->word)                                >R ( extract addr bits & shift)                                 ( a ai->) >TA  BITS15-10  OVER 2+ >TA  BITS15-10  -             DUP IF ( ai n)  ( not current page)                                    0> IF 0200 ( next ) ELSE 0600 ( prev) THEN                   ELSE  ( ai n) DROP 0000 ( current)  THEN   R> OR            ( ai m)  OVER @ OR SWAP ! THEN ;                          DECIMAL                                                                                                                                                                                                                                                         \ FIX-LEAVES                                     16:52 08/25/88                                                                 : FIX-LEAVES  ( old LEAVING  addr --)                              >R  BEGIN  LEAVING @  ?DUP  WHILE                                  DUP @ LEAVING !              ( Pointer to next in chain)        BRANCH OVER !  R@ FIXUP  REPEAT                              R>DROP  LEAVING ! ;                ( Next higher{ : TIMMEDIATE } PREVIOUS 040  OR SWAP C! ;                     { : TSMUDGE }    PREVIOUS 020 XOR SWAP C! ;                     : UNSMUDGE   PREVIOUS 0DF AND SWAP C! ;                         : REPLACE    PREVIOUS DROP 1- DUP C@ 080 OR SWAP C! ;           { : TMACRO }    HERE LAST @ - 2- 2/                               PREVIOUS DROP 1- SWAP OVER  C@  OR  SWAP C! ;                 DECIMAL                                                                                                                                                                                                                                                         \ PREV-INSTR                                     08:44 01/25/89 HEX                                                             { : PREV-INSTR } ( - a ins t/f)                                    OPTIMIZING @ NOT  IF  FALSE EXIT  THEN                          -OPT @ IF FALSE  EXIT  THEN                                     LAST-ADDR @ @ 9FFF U<  IF  FALSE EXIT  THEN                     LAST-ADDR @ DUP @ TRUE ;                                     DECIMAL                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         \ ,MACRO                                         08:42 02/22/89 HEX                                                             { : ,MACRO }  ( a c)                                               DUP 2 >  IF TUCK 3 - FOR DUP @ , 2+ NEXT SWAP THEN  1 >         IF  DUP @ DUP DE20 =   ( next to last is long literal )            IF FFDF AND , 2+ @ , DROP                                       ELSE , 2+ @ DUP RETURN <>                                          IF FFDF AND , THEN  THEN                                  ELSE @ DUP RETURN <> IF FFDF AND , THEN THEN                    1 -OPT ! ;                                                   DECIMAL                                                                                                                                                                                                                                                                                                                                                                                         \ ]  [                                           13:05 01/19/89 HEX                                                             : ]  1 STATE !   1 -OPT !                                         BEGIN  ?STACK  BL WORD  DUP C@ 0= IF DROP EXIT THEN               FIND   DUP  -1 =                                                IF  DROP  DUP 2- LINK>NAME  1-  C@ DUP 080 AND                    IF  DROP @ ,                                                    ELSE  07 AND ?DUP                                                  IF  ,MACRO  ELSE  >TA U2/ , THEN  THEN                     ELSE                                                              IF  EXECUTE  ELSE  NUMBER  DOUBLE @ ( double length)               IF  SWAP  literal  ELSE  DROP  THEN                             literal  THEN  THEN                                       STATE @ 0=   UNTIL ;                                                                                                         : [  0 STATE ! ; IMMEDIATE  DECIMAL                             \ EXIT                                           16:11 01/20/89 HEX                                                             : exit                                                             PREV-INSTR                                                      IF  -RETURN @                                                      IF  2DROP  RETURN ,                                             ELSE  20 OR  SWAP !  THEN                                    ELSE  RETURN ,  THEN ;                                       DECIMAL                                                         : EXIT                                                            ?COMP  exit ; IMMEDIATE                                                                                                                                                                                                                                                                                                                                                                       \ :  ;                                           09:33 01/16/89                                                                 : :  CREATE -2 TALLOT TSMUDGE ] ;  SMUDGE                                                                                       : ;   ?COMP                                                       exit  1 -OPT !  0 STATE !  UNSMUDGE ; IMMEDIATE                 SMUDGE                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        \ MULTI-TASKER                                                  HEX                                                             : PAUSE ( myself)  R>  0 U!  1 U@  UBR!  0 U@  >R; ;                                                                            : <MEMIT> ( n)                 \ multitasking emit                KEY?                                                            IF  100 REG@  13 =                                                  IF  BEGIN KEY 11 = UNTIL  THEN  THEN  ( xoff/xon)           BEGIN  PAUSE EMIT?  UNTIL     ( Test TBRE pin )                 0100 REG! ;                   ( send character )                                                                              : <MKEY>  ( -- c)        \ multitasking key                       BEGIN  PAUSE KEY?  UNTIL   ( Test DR pin )                      0100 REG@ ;                ( Read data sent by host )                                                                         DECIMAL                                                         \ MULTI-TASKER                                                                                                                  : TASK: ( define a task and what it does)                          CREATE  HERE 2+  -32 AND  32 +  DUP ,  H !                         HERE 4 + ,  0 ,  ]                                           DOES>  @ ;                                                                                                                   : FOREGROUND ( task)   DUP UBR!  DUP DUP 2+ !  @ >R ;           : INSTALL ( task)   1 U@  OVER 2+ !  1 U! ;                                                                                     : HALT ( task)   DUP >R  BEGIN ( a)                                   2+  DUP @ ( a [a])  R@ = NOT WHILE  @ REPEAT                 R> 2+ @  SWAP ! ;                                            : STOP ( myself)   UBR@ HALT  R> 0 U!  1 U@ UBR!  0 U@ >R; ;                                                                                                                                    \ MULTI-TASKER                                                                                                                  RAM @ -32 AND 32 + RAM !                                                                                                        VARIABLE MAIN                                                                                                                   : INIT-TASKER                                                      MAIN DUP 2+ !  MAIN UBR! ;                                                                                                   : MULTI    \ initializes multitasking key and emit                ['] <MKEY>  'KEY !     \ 8250 uart                              ['] <MEMIT> 'EMIT !                                             ['] <KEY?>  'KEY? !                                             ['] <EMIT?>  'EMIT? ! ;                                                                                                                                                                       \ LED Flasher                                    07:57 10/11/88 HEX                                                             20 CONSTANT SHORT  45 CONSTANT LONG                             : DELAY  ( n --)   FOR  A000 FOR NEXT  NEXT  ;                                                                                  : FLASHER  ( n -- )                                               1-                                                              4  FOR                                                            DUP  FOR                                                          8000 18 G!  SHORT DELAY                                         0000 18 G!  SHORT DELAY                                         NEXT                                                          LONG DELAY                                                      NEXT  ;                                                     DECIMAL                                                                                                                         \ Ram test                                       13:45 03/27/89 HEX                                                             : RAMTEST                                                       FFFE 8000 DO                                                      1 I                                                             8 0 DO                                                             2DUP C!                                                         FFFF OVER 2+ !  DUP 2+ @ DROP   \ reset MData Bus               2DUP C@ <> IF 3 FLASHER THEN                                    SWAP 2* SWAP             \ shift the bit                     LOOP                                                            2DROP                                                         LOOP                                                            8000 18 G!  4 FOR  LONG DELAY  NEXT ;                           DECIMAL                                                                                                                         \                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \ RUN  QUIT                                      08:27 01/25/89                                                                 : RUN                                                             STATE @  IF  ]  STATE @ NOT  IF  INTERPRET  THEN                         ELSE  INTERPRET  THEN ;                                                                                              HEX                                                             : QUIT   0 STATE !                                                 -2 SPR@+  0FF AND  SPR!   ( clear return stack )                BEGIN  CR                                                           QUERY                                                           RUN                                                            STATE @ 0= IF ." OK " THEN  AGAIN ;                          RECOVER                                                      DECIMAL                                                                                                                         \                                                08:22 01/10/89 OLDCREATE ROM                                                    10 OLD,             ( BASE )                                     0 OLD,             ( BLK )                                      1 OLD,             ( SCR)                                       1 OLD,             ( -OPT )                                     0 OLD,             ( -RETURN )                                '' QUIT OLD>TA OLD,  ( 'IDLE )                                    0 OLD,             ( STATE )                                   -1 OLD,             ( BLOCK# )                                   0 OLD,             ( DA )                                     '' FORTH 2+ OLD>TA OLD, ( VLINK)                                  0 OLD,             ( UPD )                                    HEX 8000 OLD,        ( FENCE ) DECIMAL                           -1 OLD,             ( CHAR-BUF)                                                                                                \ RESET                                          15:41 03/06/89 : RESET                                                            COLD @ 24680 = NOT IF ( power up) 12345 COLD ! THEN             COLD @ 12345 = NOT                                              IF  12345 COLD ! ( cold start unless reset pressed again)          200 FOR 65000 CYCLES NEXT 9999 COLD ! ( warm start) THEN     COLD @ 12345 =                                                  IF ( cold start)  RAMTEST  INIT-LINKS                              ROM BASE 26 CMOVE   FENCE @ H !   THEN                       R>DROP  ROM BASE 26 CMOVE  24680 COLD !  OPTIMIZE  HWMULT       FORTH ONLY ALSO DEFINITIONS ALWAYS   INIT-TASKER                INT-VECTORS 544 ERASE  SET-INT-VECTORS  SET-INT-MASK            SINGLE  INIT-8250                                               CR  ."  RTXFORTH  Mar 27 1989 "  CR                             ."  (c) 1989 Harris Semiconductor"   CR                         ."  V 1.0  Beta Test "  ABORT ;   RECOVER                    \ CONSTANT  2CONSTANT  VARIABLE  2VARIABLE       08:21 01/19/89                                                                 : CONSTANT  CREATE -2 TALLOT literal  exit ;                       SMUDGE                                                                                                                       : 2CONSTANT  CREATE -2 TALLOT                                      SWAP literal literal  exit ;                                    SMUDGE                                                                                                                                                                                       { : TVARIABLE } CREATE 0 , ;                                    { : T2VARIABLE } TVARIABLE  2 TALLOT ;                                                                                                                                                                                                                                                                                          \ RECURSE  I  J  (  \  .(  >BODY                 08:38 03/10/89 : .(  ASCII ) WORD  COUNT TYPE ; IMMEDIATE                      : >BODY ( a -- a) ;                                             : RECURSE  ?COMP  LAST @ 2+ >TA U2/ , ; IMMEDIATE SMUDGE        : I R@ ; MACRO                                                  : J R> R> R> I SWAP >R SWAP >R SWAP >R; ;                       : ( ASCII ) WORD DROP ;  IMMEDIATE  SMUDGE                      : \  >IN @  64 / 1+ 64 *  >IN ! ;  IMMEDIATE SMUDGE                                                                             HEX                                                             : >R; BEA7 , ; IMMEDIATE SMUDGE                                 DECIMAL                                                                                                                                                                                                                                                                                                                         \ NOT                                            16:14 01/20/89 HEX                                                             : (NOT)                                                            PREV-INSTR                                                      IF  DUP 0F00 AND  DUP 0000 =  SWAP 0E00 =  OR \ No ALU code        OVER F010 AND  A010 <>  AND         \ Not 17-bit math           IF  TRUE  ELSE  2DROP FALSE  THEN                            ELSE  FALSE  THEN                                               IF  0100 OR SWAP !                     \ Set inverse bit        ELSE  A100 ,  THEN ;                   \ Standalone          DECIMAL                                                                                                                         : NOT                                                              STATE @  IF  (NOT)  ELSE <NOT> THEN ; IMMEDIATE SMUDGE                                                                                                                                       \ OPTIMIZING SHIFT                               16:18 11/08/88 HEX                                                             { : BACK-SHIFT }                                                   PREV-INSTR                                                      IF   DUP F01F AND A000 =                                           IF  TRUE  ELSE  2DROP FALSE  THEN                            ELSE  FALSE  THEN                                               IF  ROT ( mask)  OR  SWAP !                                     ELSE   A000 OR , THEN ;                                      DECIMAL                                                                                                                                                                                                                                                                                                                                                                                                                                                         \ OPTIMIZING ALU                                 11:12 11/02/88 HEX                                                                                                                             { : TEST->LIT } ( opmask a ins testmask -- t / mask f)             OVER AND  0E00 =                                                IF  F0FF AND  0080 OR  ROT  OR  SWAP  ! TRUE                    ELSE  2DROP FALSE  THEN ;                                                                                                    { : ALU->LIT } ( mask a ins -- t / mask f)                         0F80  TEST->LIT ;                                                                                                            { : ALU->MEM } ( mask a ins -- t / mask f)                         0FC0  TEST->LIT ;                                                                                                            DECIMAL                                                                                                                         \ OPTIMIZING ALU                                 16:18 11/08/88 HEX                                                             { : ALU } ( n - n')                                               DUP >R  R@ 0400 =  R@ 0500 =  R@ 0C00 =  R>  0D00 =  OR OR OR   IF  0800 XOR  THEN ;                                          { : BACK-ALU } ( mask --)                                         PREV-INSTR                                                        IF  DUP -0C SHIFT  DUP 0A =                                        IF 2DROP DROP 0  ELSE  DUP 0B =                                 IF DROP ALU->LIT ELSE  DUP 0C =                                 IF DROP ALU->MEM ELSE  DUP 0D =                                 IF DROP ALU->LIT ELSE  DUP 0E =                                 IF DROP ALU->MEM ELSE      0F =                                 IF ALU->MEM ELSE 2DROP 0  THEN THEN THEN THEN THEN THEN    ELSE  0 THEN  0=  IF  ALU A040 OR , THEN ;                    DECIMAL                                                         \ MORE ALU, SHIFT                                11:20 11/09/88 HEX                                                               VARIABLE 'ALU                                                   VARIABLE 'SHIFT                                               {                                                               : aluCODE 'ALU @ U2/ OLDCREATE  [COMPILE] OLDIMM                   [COMPILE] OLDSM   -2 GAP  OLD,  <ALU> ;                      : shCODE 'SHIFT @ U2/ OLDCREATE  [COMPILE] OLDIMM                  [COMPILE] OLDSM   -2 GAP  OLD,  <SHIFT> ;                    }                                                                                                                               { : CRIMM } CREATE [COMPILE] TIMMEDIATE ;                       : <SHIFT> A000 OR , RETURN , ;                                  : <ALU> ALU A040 OR , RETURN , ;                                DECIMAL                                                                                                                         \ UCODES                                         14:48 08/29/88 HEX                                                             BE03 UCODE CR@     BE83 UCODE CR!    B683 UCODE CR@OR           BE06 UCODE SR@     BE86 UCODE SR!                               BE07 UCODE PC@     BE05 UCODE SQ@                               BE09 UCODE SPR@    BE89 UCODE SPR!   B889 UCODE SPR@+           BE0C UCODE IPR@    BE8C UCODE IPR!                              BE0E UCODE UPR@    BE8E UCODE UPR!                              BE0F UCODE CPR@    BE8F UCODE CPR!                              BE11 UCODE UBR@    BE91 UCODE UBR!                              BE13 UCODE TC0@    BE93 UCODE TC0!                              BE14 UCODE TC1@    BE94 UCODE TC1!                              BE15 UCODE TC2@    BE95 UCODE TC2!                              DECIMAL                                                                                                                                                                                         \ UCODES                                         09:45 10/18/88 HEX                                                             BE84 UCODE MD!     BE04 UCODE  MD@                              BE08 UCODE IMR@    BE88 UCODE IMR!                              BE0B UCODE IVR@    BE8B UCODE SLR!                              BE0D UCODE DPR@    BE8D UCODE DPR!                              BE10 UCODE IBC@    BE90 UCODE IBC!                              BE16 UCODE MLR@    BE17 UCODE MHR@                              DECIMAL                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         \ UCODES                                         10:58 08/30/88 HEX                                                             A55A UCODE S'       A558 UCODE S"       A51A UCODE S1'          A49D UCODE  *"      A89C UCODE  U*'     A89D UCODE  *'          A41A UCODE  U/1'    A45A UCODE  U/'     A458 UCODE U/"          DECIMAL                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         \ UCODES                                         10:04 01/24/89 HEX                                                             AE40 UCODE  DROP    AEC0 UCODE  OVER      A0C0 UCODE  DUP       AE80 UCODE  SWAP    A000 UCODE  NOP       A480 UCODE SOS-       BE00 UCODE  R@      B4C1 UCODE  1-        BF40 UCODE -1         B4C2 UCODE  2-      B8C1 UCODE  1+        B8C2 UCODE  2+        FE00 UCODE  C@      FE80 UCODE  C!                              BCC0 UCODE  NEGATE  AC41 UCODE  <         A441 UCODE  >         A040 UCODE NIP      BDC0 UCODE 0SWAP-c    E942 UCODE @+2        B096 UCODE MULU     B097 UCODE MULS       E9C2 UCODE !+2        B08D UCODE SELDPR   B00D UCODE SELCPR     EE00 UCODE @          B090 UCODE SOFTINT  B010 UCODE -SOFTINT   EE80 UCODE !          F8C1 UCODE DUPC!+1  A100 UCODE <NOT>      E542 UCODE @-2        F9C1 UCODE C!+1     F5C1 UCODE C!-1                             F941 UCODE C@+1     F541 UCODE C@-1                             DECIMAL                                                         \ shCODES  aluCODES                              09:10 09/28/88 HEX                                                             : aluCODE   CRIMM  <ALU>                                         DOES> HHERE STATE @ IF @ F00 AND ALU BACK-ALU ELSE EXECUTE THEN ; 'ALU ! SMUDGE                                                : shCODE    CRIMM  <SHIFT>                                       DOES> HHERE STATE @ IF @ BACK-SHIFT ELSE EXECUTE THEN ;         'SHIFT !  SMUDGE                                                                                                               0F shCODE D2/       0A shCODE D2*       06 shCODE U2/           07 shCODE 2/        01 shCODE 0<        02 shCODE 2*            200 aluCODE AND    600 aluCODE OR      A00 aluCODE XOR          800 aluCODE +      400 aluCODE -       500 aluCODE -c           900 aluCODE +c     700 aluCODE NAND    B00 aluCODE XNOR         300 aluCODE NOR    C00 aluCODE SWAP-   D00 aluCODE SWAP-c       DECIMAL                                                         \ noret                                          08:31 01/25/89 { : noret } , -RETURN ! ;                                       HEX                                                             : R> ?COMP  1 BE01 noret ;           IMMEDIATE SMUDGE           : 2R> ?COMP  COMPILE R> COMPILE R> ; IMMEDIATE SMUDGE           : R>DROP ?COMP  1 B001 noret ;       IMMEDIATE SMUDGE           : R>DROP>R ?COMP  1 BE80 noret ;     IMMEDIATE SMUDGE           : >R ?COMP  1 BE81 noret ;           IMMEDIATE SMUDGE           : 2>R ?COMP  COMPILE >R COMPILE >R ; IMMEDIATE SMUDGE           : EXECUTE STATE @ IF 1 BE87 noret ELSE EXECUTE THEN ; IMMEDIATE  SMUDGE                                                         : OF( ?COMP  1 BE82 noret ;    IMMEDIATE SMUDGE                 : TIMES ?COMP  1 BE82 noret ;  IMMEDIATE SMUDGE                 : EXTRA( ?COMP  1 BE82 noret ; IMMEDIATE SMUDGE                 DECIMAL                                                                                                                         \ UCODE                                          15:02 01/10/89 HEX                                                             : UCODE CREATE -2 TALLOT , REPLACE RETURN , ;                   DECIMAL                                                                                                                         : LONG ( p a)                                                      2DUP  0 LAST @ 2+  2SWAP  HERE LAST @ 2+ - DUP >R  CMOVEL       R> 2- NEGATE TALLOT  SWAP  , U2/ ,  TIMMEDIATE                  DOES>  STATE @                                                  IF  2@  literal  COMPILE CPR!  ,                                ELSE  2@ SWAP EXECUTEL THEN ;                                                                                                                                                                                                                                                                                                                                                                \                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \ IF  ELSE  THEN                                 08:38 09/02/88                                                                 : IF  ( -- a) ?COMP                                               HERE  ?BRANCH , ;   IMMEDIATE                                                                                                 : ELSE ( a1 -- a2)  ?COMP                                         HERE  BRANCH , SWAP HERE FIXUP ; IMMEDIATE                                                                                    : THEN ( a)   ?COMP                                               HERE  FIXUP  1 -OPT !  ;   IMMEDIATE                                                                                                                                                                                                                                                                                                                                                                                                                          \ CONTROL STRUCTURES                             13:44 09/20/88 : BEGIN  ( -- a->)  ?COMP                                         LEAVING @ 0 LEAVING !  HERE  1 -OPT !  ;   IMMEDIATE                                                                          : (AGAIN)  ( a->)                                                 HERE SWAP  BRANCH ,  FIXUP HERE FIX-LEAVES ;                  : AGAIN  ( a->)  ?COMP  (AGAIN) ; IMMEDIATE                                                                                     : REPEAT ( BEGIN WHILE --)   ?COMP                                >R SWAP (AGAIN)  R> HERE FIXUP  1 -OPT ! ;  IMMEDIATE                                                                         : UNTIL  ( a->)   ?COMP                                           HERE SWAP ?BRANCH ,  FIXUP HERE FIX-LEAVES ;  IMMEDIATE                                                                       : WHILE  ( LEAVE-ptr BEGIN -- BEGIN LEAVE-ptr WHILE)              ?COMP   SWAP HERE ?BRANCH , ;   IMMEDIATE                     \ DO  LOOP  +LOOP  LEAVE  FOR  NEXT              08:47 02/22/89 : LOOP   ?COMP  COMPILE loop  (AGAIN)                             COMPILE R>DROP   COMPILE R>DROP   1 -RETURN ! ; IMMEDIATE      SMUDGE                                                                                                                         : +LOOP   ?COMP  COMPILE +loop  (AGAIN)                           COMPILE R>DROP   COMPILE R>DROP   1 -RETURN ! ; IMMEDIATE      SMUDGE                                                                                                                         : DO  ( limit index )  ?COMP  LEAVING @  0 LEAVING !              COMPILE do  HERE ;   IMMEDIATE SMUDGE                                                                                         : LEAVE                                                           ?COMP  HERE LEAVING @ , LEAVING ! ;  IMMEDIATE SMUDGE                                                                                                                                         \ FOR  NEXT                                                                                                                     HEX                                                             : FOR  ?COMP  COMPILE >R HERE ; IMMEDIATE SMUDGE                : NEXT  ?COMP  HERE 9800 , SWAP FIXUP ; IMMEDIATE SMUDGE        DECIMAL                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         \ LOAD THRU   (                                  09:05 02/22/89                                                                 : LOAD ( n -- )                                                   BLK @ >R  >IN @ >R   BLK ! 0 >IN !  INTERPRET                   R> >IN !  R> BLK ! ;                                                                                                          : THRU ( n1 n2 -- )                                               OVER -  FOR  DUP LOAD  1+  NEXT  DROP ;                                                                                       : VARIABLE TVARIABLE ;                                          : 2VARIABLE T2VARIABLE ;                                        : ALLOT TALLOT ;                                                : IMMEDIATE TIMMEDIATE ;                                        : SMUDGE TSMUDGE ;                                              : MACRO  TMACRO ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               ( VARIABLES                                    15:33 12/21/87 )                                                                 DECIMAL                                                                                                                         50 CONSTANT MAX-QUEENS                                          VARIABLE #QUEENS                                                                                                                VARIABLE COL     50  ALLOT                                      VARIABLE DIAG1  100  ALLOT                                      VARIABLE DIAG2  100  ALLOT                                      VARIABLE XBOARD 2500 ALLOT                                                                                                      VARIABLE TRACE                                                                                                                                                                                                                                                  ( INITIALIZE-ARRAYS                            15:34 12/21/87 )                                                                 : INITIALIZE-ARRAYS ( --)                                         COL       50 0 FILL                                             DIAG1    100 0 FILL                                             DIAG2    100 0 FILL                                             XBOARD  2500 0 FILL ;                                                                                                         : TRACE-ON  1 TRACE ! ;                                         : TRACE-OFF 0 TRACE ! ;                                                                                                                                                                                                                                                                                                                                                                                                                                         ( .BOARD                                       15:35 12/21/87 )                                                                 : .BOARD ( -- )                                                   #QUEENS @  0 DO    CR                                             #QUEENS @ 0 DO                                                    J #QUEENS @ * I + XBOARD + C@                                   IF ." * "  ELSE ." . " THEN                                   LOOP                                                          LOOP ;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        ( DIAG-ADDR  SPACE-FREE?                       11:18 01/05/88 )                                                                 : DIAG1-ADDR  ( row col -- addr)                                  SWAP - #QUEENS @ + DIAG1 +  ;                                                                                                 : DIAG2-ADDR  ( row col -- addr)                                  + 1+ DIAG2 + ;                                                                                                                : SPACE-FREE?  ( row col -- flag )                                DUP COL + C@ 0= >R                                              2DUP DIAG1-ADDR  C@ 0= >R                                       DIAG2-ADDR C@ 0= R> AND R> AND ;                                                                                                                                                                                                                                                                                              ( PLACE-PIECE  REMOVE-PIECE                    11:18 01/05/88 )                                                                 : PLACE-PIECE  ( row col --)                                      1 OVER COL + C!                                                 OVER #QUEENS @ * OVER + XBOARD + 1 SWAP C!                      2DUP DIAG1-ADDR 1 SWAP C!   DIAG2-ADDR 1 SWAP C! ;                                                                            : REMOVE-PIECE  ( row col --)                                     0 OVER COL + C!                                                 OVER #QUEENS @ * OVER + XBOARD + 0 SWAP C!                      2DUP DIAG1-ADDR 0 SWAP C!   DIAG2-ADDR 0 SWAP C! ;                                                                                                                                                                                                                                                                                                                                            ( PLACE-QUEEN                                  11:18 01/05/88 )                                                                 : PLACE-QUEEN    ( #queens -- f)                                  DUP 0< NOT  IF                                                   0 SWAP  #QUEENS @ 0                                             DO                                                               DUP I SPACE-FREE?                                               IF DUP I PLACE-PIECE                                              TRACE @ IF .BOARD THEN                                          DUP 1-  RECURSE                                                 IF SWAP DROP 1 SWAP LEAVE                                       ELSE DUP I REMOVE-PIECE THEN                                  THEN                                                           LOOP DROP                                                      ELSE DROP 1 THEN ;                                                                                                            (   QUEENS                                     15:43 12/21/87 )                                                                 : QUEENS   ( n -- )                                               INITIALIZE-ARRAYS                                               DUP #QUEENS !                                                   1- PLACE-QUEEN                                                  IF .BOARD  ." Success"                                          ELSE  ." No solution