\ /* towers.c */
\ GNU C for RTX 2000

EMPTY
: XY " DOS XY btowers.4" EVALUATE ;

DECIMAL
load GNUTOOL.4
VARIABLE movesdone   4   CELL- ALLOT

VARIABLE freelist   4   CELL- ALLOT

VARIABLE cellspace   76   CELL- ALLOT

VARIABLE stack   8   CELL- ALLOT

#REGS 100 - REG-ADDR $FFC0 AND  UBR!
\ gcc_compiled.:


( RTX 2000 code generation)

 64 FRAME_SIZE ! 

 : error  ( FUNC )   ( 3  top> empty )
  ." error in towers" cr
   ;  ( END )   

 ( 5  top> empty )

( RTX 2000 code generation)

 64 FRAME_SIZE ! 

 : makenull  ( FUNC )   ( 3  top> empty )
 ( #4 dummy reload )  ( 4  top> empty )
 2*               ( 9  top> #64d )
 [ stack ] SYMBOL_+  ( 10  top> #66d )
 [ 0 ] LIT_SWAP  ( 11  top> #67d )
 !                ( 11  top> #67x #0x )
   ;  ( END )



( RTX 2000 code generation)

 64 FRAME_SIZE !

 : getelement  ( FUNC )   ( 3  top> empty )
 freelist  ( SYMBOL)    ( 8  top> empty )
 @                ( 8  top> #0x )
 0>               ( 8  top> #0x )
 [ 004 ] BRANCHZ   ( 9  top> #0x )
 freelist  ( SYMBOL)    ( 12  top> empty )
 @                ( 12  top> #0x )
 DUP           ( #64)  ( 16  top> #64 )
 2*               ( 16  top> #0x #64 )
 2*               ( 16  top> #0x #64 )
 [ cellspace ] SYMBOL_+  ( 17  top> #69d #64 )
 2  ( LIT)       ( 18  top> #70d #64 )
 +                ( 18  top> #0x #0x #64 )
 @                ( 18  top> #0x #64 )
 freelist  ( SYMBOL)    ( 18  top> #0x #64 )
 !                ( 18  top> #0x #0x #64 )
 2 U!            ( 19  top> #64 )
 [ 005 ] BRANCH    ( 19  top> empty )
 [ 004 ] LABEL     ( 21  top> empty )
 -64 FP+!  ( Link)   ( 26  top> empty )
   error  ( CALL)    ( 26  top> empty )
 64 FP+!  ( Unlink)  ( 26  top> empty )
 [ 005 ] LABEL     ( 29  top> empty )
 2 U@            ( 31  top> empty )
   ;  ( END )   


( RTX 2000 code generation)

 64 FRAME_SIZE ! 

 : push  ( FUNC )   ( 3  top> empty )
 ( #4 dummy reload )  ( 4  top> empty )
 ( #5 dummy reload )  ( 5  top> #64 )
 0  ( LIT)       ( 9  top> #65 #64 )
 2 U!            ( 9  top> #66 #65 #64 )
 DUP           ( #65)  ( 12  top> #65 #64 )
 2*               ( 12  top> #0x #65 #64 )
 [ stack ] SYMBOL_+  ( 13  top> #69d #65 #64 )
 3 U!  ( flush )   ( 16  top> #70d #65 #64 )
 4 U!            ( 16  top> #65 #64 )
 5 U!            ( 16  top> #64 )
 3 U@            ( 16  top> empty )
 @                ( 16  top> #70x )
 0>               ( 16  top> #0x )
 [ 007 ] BRANCHZ   ( 17  top> #0x )
 4 U@            ( 21  top> empty )
 2*               ( 21  top> #65x )
 [ stack ] SYMBOL_+  ( 22  top> #74d )
 @                ( 25  top> #75d )
 2*               ( 25  top> #0x )
 2*               ( 25  top> #0x )
 [ cellspace ] SYMBOL_+  ( 26  top> #78d )
 @                ( 27  top> #79d )
 5 U@            ( 28  top> #80x )
 <=               ( 29  top> #64x #80x )
 [ 107 ] BRANCHZ   ( 29  top> #0x )
 1  ( LIT)       ( 34  top> #66 )
 6 U!            ( 37  top> #4 #66 )

 -64 FP+!  ( Link)   ( 37  top> empty )
   error  ( CALL)    ( 37  top> empty )
 64 FP+!  ( Unlink)  ( 37  top> empty )
 [ 007 ] LABEL     ( 41  top> empty )
 [ 107 ] LABEL     ( 41  top> empty )
 2 U@            ( 44  top> empty )
 [ 009 ] BRANCHNZ  ( 45  top> #0x )
 -64 FP+!  ( Link)   ( 50  top> empty )
   getelement  ( CALL)    ( 50  top> empty )
 64 FP+!  ( Unlink)  ( 50  top> #2x )
 DUP           ( #67)  ( 54  top> #67 )
 2*               ( 54  top> #0x #67 )
 2*               ( 54  top> #0x #67 )
 [ cellspace ] SYMBOL_+  ( 55  top> #83d #67 )
 4 U@            ( 57  top> #84 #67 )
 2*               ( 57  top> #65x #84 #67 )
 [ stack ] SYMBOL_+  ( 58  top> #86d #84 #67 )
 @_SWAP           ( 59  top> #87d #84d #67 )
 2  ( LIT)       ( 59  top> #84x #0x #67 )
 +                ( 59  top> #0x #0x #0x #67 )
 !                ( 59  top> #0x #0x #67 )
 4 U@            ( 62  top> #67 )
 2*               ( 62  top> #65x #67 )
 [ stack ] SYMBOL_+  ( 63  top> #89d #67 )
 OVER          ( #67)  ( 64  top> #90d #67 )
 SWAP !           ( 64  top> #0x #90d #67 )
 2*               ( 67  top> #67d )
 2*               ( 67  top> #0x )
 [ cellspace ] SYMBOL_+  ( 68  top> #92d )
 [ 5 ]  U@_SWAP  ( 69  top> #93d )
 !                ( 69  top> #93d #64x )
 EXIT  [ 009 ] LABEL     ( 71  top> empty )
   ;  ( END )   

 ( 72  top> empty )

( RTX 2000 code generation)

 64 FRAME_SIZE !

 : init  ( FUNC )   ( 3  top> empty )
 ( #4 dummy reload )  ( 4  top> empty )
 ( #5 dummy reload )  ( 5  top> #64 )
 OVER          ( #64)  ( 10  top> #65 #64 )
 4 U!            ( 12  top> #4 #65 #64 ) \ WARNING -- stack argument problem!

 3 U!            ( 12  top> #65 #64 )
\ 4 U!            ( 12  top> #64 )
 -64 FP+!  ( Link)   ( 12  top> empty )
   makenull  ( CALL)    ( 12  top> empty )
 64 FP+!  ( Unlink)  ( 12  top> empty )
 3 U@            ( 15  top> empty )
 [ 5 ] DUP_U!         ( 47  top> #66 )
 0>               ( 47  top> #66x )
 [ 0015 ] BRANCHZ   ( 49  top> #0x )
 ( LOOP_BEGIN)    ( 17  top> empty )
 [ 0014 ] LABEL     ( 35  top> empty )
 5 U@            ( 25  top> empty )
 4 U@            ( 26  top> #4 )
 ( #5 Calling Arg )  ( 29  top> #5 #4 )
 ( #4 Calling Arg )  ( 29  top> #4 )
 -64 FP+!  ( Link)   ( 29  top> empty )
   push  ( CALL)    ( 29  top> empty )
 64 FP+!  ( Unlink)  ( 29  top> empty )
 5 U@            ( 34  top> empty )
 1  ( LIT)       ( 34  top> #66x )
 -                ( 34  top> #0x #66x )
 [ 5 ] DUP_U!         ( 20  top> #66 )
 0>               ( 20  top> #66x )
 [ 0014 ] BRANCHNZ  ( 21  top> #0x )
 ( LOOP_END)      ( 40  top> empty )
 EXIT  [ 0015 ] LABEL     ( 48  top> empty )
   ;  ( END )



( RTX 2000 code generation)

 64 FRAME_SIZE ! 

 : pop  ( FUNC )   ( 3  top> empty )
 ( #4 dummy reload )  ( 4  top> empty )
 DUP           ( #64)  ( 9  top> #64 )
 2*               ( 9  top> #0x #64 )
 [ stack ] SYMBOL_+  ( 10  top> #68d #64 )
 SWAP             ( 13  top> #69d #64 )
 2 U!            ( 13  top> #64 #69d )
 @                ( 13  top> #69x )
 0>               ( 13  top> #0x )
 [ 0017 ] BRANCHZ   ( 14  top> #0x )
 2 U@            ( 18  top> empty )
 2*               ( 18  top> #64x )
 [ stack ] SYMBOL_+  ( 19  top> #73d )
 @                ( 22  top> #74d )
 2*               ( 22  top> #0x )
 2*               ( 22  top> #0x )
 [ cellspace ] SYMBOL_+  ( 23  top> #77d )
 @                ( 24  top> #78d )
 2 U@            ( 27  top> #66 )
 2*               ( 27  top> #64x #66 )
 [ stack ] SYMBOL_+  ( 28  top> #80d #66 )
 @                ( 31  top> #81d #66 )
 2*               ( 31  top> #0x #66 )
 2*               ( 31  top> #0x #66 )
 [ cellspace ] SYMBOL_+  ( 32  top> #84d #66 )
 2  ( LIT)       ( 33  top> #85d #66 )
 +                ( 33  top> #0x #0x #66 )
 @                ( 33  top> #0x #66 )
 2 U@            ( 36  top> #65 #66 )
 2*               ( 36  top> #64x #65 #66 )
 [ stack ] SYMBOL_+  ( 37  top> #87d #65 #66 )
 @                ( 40  top> #88d #65 #66 )
 2*               ( 40  top> #0x #65 #66 )
 2*               ( 40  top> #0x #65 #66 )
 [ cellspace ] SYMBOL_+  ( 41  top> #91d #65 #66 )
 freelist  ( SYMBOL)    ( 42  top> #92d #65 #66 )
 @_SWAP           ( 42  top> #0x #92d #65 #66 )
 2  ( LIT)       ( 42  top> #92x #0x #65 #66 )
 +                ( 42  top> #0x #0x #0x #65 #66 )
 !                ( 42  top> #0x #0x #65 #66 )
 2 U@            ( 45  top> #65 #66 )
 2*               ( 45  top> #64x #65 #66 )
 [ stack ] SYMBOL_+  ( 46  top> #94d #65 #66 )
 @                ( 47  top> #95d #65 #66 )
 freelist  ( SYMBOL)    ( 47  top> #0x #65 #66 )
 !                ( 47  top> #0x #0x #65 #66 )
 2 U@            ( 50  top> #65 #66 )
 2*               ( 50  top> #64x #65 #66 )
 [ stack ] SYMBOL_+  ( 51  top> #97d #65 #66 )
 !                ( 52  top> #98d #65d #66 )
 [ 3 ] DUP_U!         ( 56  top> #2 )
 EXIT         ( [ 0016 ] BRANCH )  ( 56  top> empty )
 [ 0017 ] LABEL     ( 60  top> empty )
 -64 FP+!  ( Link)   ( 65  top> empty )
   error  ( CALL)    ( 65  top> empty )
 64 FP+!  ( Unlink)  ( 65  top> empty )
 EXIT  [ 0016 ] LABEL     ( 72  top> empty )
   ;  ( END )   

 ( 72  top> empty )

( RTX 2000 code generation)

 64 FRAME_SIZE ! 

 : move  ( FUNC )   ( 3  top> empty )
 ( #4 dummy reload )  ( 4  top> empty )
 ( #5 dummy reload )  ( 5  top> #64 )
 2 U!            ( 10  top> #65 #64d )
 ( #4 Calling Arg )  ( 13  top> #4 )
 -64 FP+!  ( Link)   ( 13  top> empty )
   pop  ( CALL)    ( 13  top> empty )
 64 FP+!  ( Unlink)  ( 13  top> #2x )
 2 U@            ( 18  top> #4 )
 ( #5 Calling Arg )  ( 21  top> #5 #4 )
 ( #4 Calling Arg )  ( 21  top> #4 )
 -64 FP+!  ( Link)   ( 21  top> empty )
   push  ( CALL)    ( 21  top> empty )
 64 FP+!  ( Unlink)  ( 21  top> empty )
 1  ( LIT)       ( 25  top> empty )
 movesdone  ( SYMBOL)    ( 25  top> #0x )
 +!               ( 25  top> #0x #0x )
   ;  ( END )   

 ( 26  top> empty )

( RTX 2000 code generation)

 64 FRAME_SIZE ! 

 : tower  ( FUNC )   ( 3  top> empty )
 ( #4 dummy reload )  ( 4  top> empty )
 ( #5 dummy reload )  ( 5  top> #64 )
 ( #6 dummy reload )  ( 6  top> #65 #64 )
 2 U!            ( 10  top> #66 #65 #64 )
 3 U!            ( 11  top> #65 #64 )
 4 U!            ( 11  top> #64 )
 2 U@            ( 11  top> empty )
 1  ( LIT)       ( 11  top> #66x )
 -                ( 12  top> #68x #66x )
 [ 0021 ] BRANCHNZ  ( 12  top> #0x )
 4 U@            ( 16  top> empty )
 3 U@            ( 17  top> #4 )
 ( #5 Calling Arg )  ( 20  top> #5 #4 )
 ( #4 Calling Arg )  ( 20  top> #4 )
 -64 FP+!  ( Link)   ( 20  top> empty )
   move  ( CALL)    ( 20  top> empty )
 64 FP+!  ( Unlink)  ( 20  top> empty )
 EXIT         ( [ 0022 ] BRANCH )  ( 22  top> empty )
 [ 0021 ] LABEL     ( 24  top> empty )
 6  ( LIT)       ( 27  top> empty )
 3 U@            ( 27  top> #0x )
 -                ( 27  top> #65x #0x )
 4 U@            ( 28  top> #69d )
 -                ( 28  top> #64x #0x )
 [ 8 ] DUP_U!
 4 U@            ( 32  top> #67 )
 SWAP          ( #67)  ( 33  top> #4 #67 ) \ WARNING -- stack argument problem!

 2 U@            ( 34  top> #5 #4 )
 1  ( LIT)       ( 34  top> #66x #5 #4 )
 -                ( 34  top> #0x #66x #5 #4 )
\ 5 U!            ( 38  top> #6 #5 #4  )
\ 6 U!            ( 38  top> #5 #4  )
\ 7 U!            ( 38  top> #4 #) \ WARNING -- stack argument problem!

\ 8 U!            ( 38  top> #67 )
 -64 FP+!  ( Link)   ( 38  top> empty )
recurse \ tower  ( CALL)    ( 38  top> empty )
 64 FP+!  ( Unlink)  ( 38  top> empty )
 4 U@            ( 41  top> empty )
 3 U@            ( 42  top> #4 )
 ( #5 Calling Arg )  ( 45  top> #5 #4 )
 ( #4 Calling Arg )  ( 45  top> #4 )
 -64 FP+!  ( Link)   ( 45  top> empty )
   move  ( CALL)    ( 45  top> empty )
 64 FP+!  ( Unlink)  ( 45  top> empty )
 8 U@            ( 49  top> empty )
 3 U@            ( 50  top> #4 )
 2 U@            ( 51  top> #5 #4 )
 1  ( LIT)       ( 51  top> #66x #5 #4 )
 -                ( 51  top> #0x #66x #5 #4 )
 ( #6 Calling Arg )  ( 55  top> #6 #5 #4 )
 ( #5 Calling Arg )  ( 55  top> #5 #4 )
 ( #4 Calling Arg )  ( 55  top> #4 )
 -64 FP+!  ( Link)   ( 55  top> empty )
recurse \   tower  ( CALL)    ( 55  top> empty )
 64 FP+!  ( Unlink)  ( 55  top> empty )
 EXIT  [ 0022 ] LABEL     ( 57  top> empty )
   ;  ( END )   

 ( 58  top> empty )

( RTX 2000 code generation)

 64 FRAME_SIZE ! 

 : main  ( FUNC )   ( 3  top> empty )
#REGS 100 - REG-ADDR $FFC0 AND  UBR!
 1  ( LIT)       ( 6  top> empty )
 [ 0027 ADD_INDEX ] >R   ( 68  top> #64 )
 ( TYPE 1 LOOP BEGIN)  ( 7  top> empty )
 [ 0027 ] LABEL     ( 23  top> empty )
 [ 0027 ]  INDEX  ( 15  top> empty )
 2*               ( 15  top> #64x )
 2*               ( 15  top> #0x )
 [ cellspace ] SYMBOL_+  ( 16  top> #67d )
 [ 0027 ]  INDEX  ( 18  top> #68d )
 1  ( LIT)       ( 18  top> #64x #68d )
 -                ( 18  top> #0x #64x #68d )
 SWAP             ( 18  top> #0x #68d )
 2  ( LIT)       ( 18  top> #68x #0x )
 +                ( 18  top> #0x #0x #0x )
 !                ( 18  top> #0x #0x )
 R>               ( 22  top> empty )
 1  ( LIT)       ( 22  top> #64x )
 +                ( 22  top> #0x #64x )
 DUP_>R   ( #64 )  ( 10  top> #64 )
 18  ( LIT)       ( 10  top> #64x )
 U>               ( 11  top> #65x #64x )
 [ 0027 ] BRANCHZ   ( 11  top> #0x )
 [ 0027 DROP_INDEX ] R>DROP  ( 28  top> empty )
 [ 0028 ] LABEL     ( 69  top> empty )
 18  ( LIT)       ( 31  top> empty )
 freelist  ( SYMBOL)    ( 31  top> #0x )
 !                ( 31  top> #0x #0x )
 1  ( LIT)       ( 34  top> empty )
 14  ( LIT)       ( 35  top> #4 )
 ( #5 Calling Arg )  ( 38  top> #5 #4 )
 ( #4 Calling Arg )  ( 38  top> #4 )
 -64 FP+!  ( Link)   ( 38  top> empty )
   init  ( CALL)    ( 38  top> empty )
 64 FP+!  ( Unlink)  ( 38  top> empty )
 2  ( LIT)       ( 41  top> empty )
 ( #4 Calling Arg )  ( 43  top> #4 )
 -64 FP+!  ( Link)   ( 43  top> empty )
   makenull  ( CALL)    ( 43  top> empty )
 64 FP+!  ( Unlink)  ( 43  top> empty )
 3  ( LIT)       ( 47  top> empty )
 ( #4 Calling Arg )  ( 49  top> #4 )
 -64 FP+!  ( Link)   ( 49  top> empty )
   makenull  ( CALL)    ( 49  top> empty )
 64 FP+!  ( Unlink)  ( 49  top> empty )
 0  ( LIT)       ( 52  top> empty )
 movesdone  ( SYMBOL)    ( 52  top> #0x )
 !                ( 52  top> #0x #0x )
 1  ( LIT)       ( 55  top> empty )
 2  ( LIT)       ( 56  top> #4 )
 14  ( LIT)       ( 57  top> #5 #4 )
 ( #6 Calling Arg )  ( 61  top> #6 #5 #4 )
 ( #5 Calling Arg )  ( 61  top> #5 #4 )
 ( #4 Calling Arg )  ( 61  top> #4 )
 -64 FP+!  ( Link)   ( 61  top> empty )
   tower  ( CALL)    ( 61  top> empty )
 64 FP+!  ( Unlink)  ( 61  top> empty )
   ;  ( END )   

 ( 63  top> empty )
