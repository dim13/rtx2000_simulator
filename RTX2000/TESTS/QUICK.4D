\ /* quick.c */
\ Improved source code GNU C for RTX 2000

EMPTY
: XY " DOS XY quick.4D" EVALUATE ;

DECIMAL
load GNUTOOL.4

#REGS 100 - REG-ADDR $FFC0 AND  UBR!

VARIABLE seed   4   CELL- ALLOT
VARIABLE top   4   CELL- ALLOT
VARIABLE littlest   4   CELL- ALLOT
VARIABLE biggest   4   CELL- ALLOT
VARIABLE sortlist   10004   CELL- ALLOT

: .DATA
  1000 2 DO I SORTLIST + @ .  2 +LOOP ;

: do_error
   ." Error in Quick." cr
   ;

 ( 13  top> #2x )

( RTX 2000 code generation)

 64 FRAME_SIZE ! 

 : Initrand  ( FUNC )   ( 3  top> empty )
 9219  ( LIT)       ( 6  top> empty )
 seed  ( SYMBOL)    ( 6  top> #0x )
 !                ( 6  top> #0x #0x )
   ;  ( END )   

 ( 6  top> empty )

( RTX 2000 code generation)

 64 FRAME_SIZE ! 

 : Rand  ( FUNC )   ( 3  top> empty )
 seed  ( SYMBOL)    ( 6  top> empty )
 @                ( 6  top> #0x )
 1309  ( LIT)       ( 6  top> #0x )
 *                ( 6  top> #0x #0x )
 13849  ( LIT)       ( 8  top> #64d )
 +                ( 8  top> #0x #0x )
 seed  ( SYMBOL)    ( 10  top> #0x )
 TUCK_! ( #0)    ( 10  top> #0x #0x )
   ;  ( END )   

 ( 11  top> #2 )

( RTX 2000 code generation)

 64 FRAME_SIZE ! 

 : Initarr  ( FUNC )   ( 3  top> empty )
 -64 FP+!  ( Link)   ( 7  top> empty )
   Initrand  ( CALL)    ( 7  top> empty )
 64 FP+!  ( Unlink)  ( 7  top> empty )
 0  ( LIT)       ( 9  top> empty )
 biggest  ( SYMBOL)    ( 9  top> #0x )
 !                ( 9  top> #0x #0x )
 0  ( LIT)       ( 10  top> empty )
 littlest  ( SYMBOL)    ( 10  top> #0x )
 !                ( 10  top> #0x #0x )
 [                ( 13  top> empty )
 sortlist  ( SYMBOL)    ( 13  top> empty )
 2  ( LIT)       ( 13  top> #0x )
 +                ( 13  top> #0x #0x )
 ] LITERAL        ( 13  top> #0x )
 [                ( 65  top> #64 )
 sortlist  ( SYMBOL)    ( 65  top> #64 )
 10000  ( LIT)       ( 65  top> #0x #64 )
 +                ( 65  top> #0x #0x #64 )
 ] LITERAL        ( 65  top> #0x #64 )
 OVER          ( #64)  ( 66  top> #67d #64 )
 2 U!            ( 66  top> #64 #67d #64x )
 U>               ( 68  top> #67x #64x )
 [ 0012 ] BRANCHNZ  ( 68  top> #0x )
 ( LOOP_BEGIN)    ( 15  top> empty )
 [ 0011 ] LABEL     ( 53  top> empty )
 -64 FP+!  ( Link)   ( 25  top> empty )
   Rand  ( CALL)    ( 25  top> empty )
 64 FP+!  ( Unlink)  ( 25  top> #2x )
 DUP           ( #65)  ( 30  top> #65 )
 32668  ( LIT)       ( 30  top> #0x #65 )
 -                ( 30  top> #0x #0x #65 )
 1_PUT    ( #65)  ( 30  top> #0x #65 )
 DUP           ( #65)  ( 32  top> #65 )
 2 U@  !         ( 32  top> #0x #65 )
 biggest  ( SYMBOL)    ( 35  top> #65 )
 @                ( 35  top> #0x #65 )
 OVER          ( #65)  ( 36  top> #71d #65 )
 3 U!            ( 36  top> #65 #71d #65x )
 >                ( 37  top> #71x #65x )
 [ 008 ] BRANCHZ   ( 37  top> #0x )
 3 U@            ( 38  top> empty )
 biggest  ( SYMBOL)    ( 38  top> #65x )
 !                ( 38  top> #0x #65x )
 [ 007 ] BRANCH    ( 39  top> empty )
 [ 008 ] LABEL     ( 41  top> empty )
 littlest  ( SYMBOL)    ( 43  top> empty )
 @                ( 43  top> #0x )
 3 U@            ( 44  top> #72d )
 >                ( 44  top> #65x #72d )
 [ 107 ] BRANCHZ   ( 45  top> #0x )
 3 U@            ( 46  top> empty )
 littlest  ( SYMBOL)    ( 46  top> #65x )
 !                ( 46  top> #0x #65x )
 [ 007 ] LABEL     ( 51  top> empty )
 [ 107 ] LABEL     ( 51  top> empty )
 2 U@            ( 52  top> empty )
 2  ( LIT)       ( 52  top> #64x )
 +                ( 52  top> #0x #64x )
 [                ( 18  top> #64 )
 sortlist  ( SYMBOL)    ( 18  top> #64 )
 10000  ( LIT)       ( 18  top> #0x #64 )
 +                ( 18  top> #0x #0x #64 )
 ] LITERAL        ( 18  top> #0x #64 )
 OVER          ( #64)  ( 19  top> #67d #64 )
 2 U!            ( 19  top> #64 #67d #64x )
 U>               ( 20  top> #67x #64x )
 [ 0011 ] BRANCHZ   ( 20  top> #0x )
 ( LOOP_END)      ( 58  top> empty )
 EXIT  [ 0012 ] LABEL     ( 67  top> empty )
   ;  ( END )   

 ( 60  top> empty )

( RTX 2000 code generation)

 64 FRAME_SIZE ! 

 : Quicksort  ( FUNC )   ( 3  top> empty )
 ( #4 dummy reload )  ( 4  top> empty )
 ( #5 dummy reload )  ( 5  top> #64 )
 ( #6 dummy reload )  ( 6  top> #65 #64 )
 OVER          ( #65)  ( 10  top> #66 #65 #64 )
 2 U!            ( 10  top> #67 #66 #65 #64 )
 [ 3 ] DUP_U!         ( 10  top> #66 #65 #64 )
 2 U@            ( 13  top> #68 #65 #64 )
 u2/              ( 13  top> #0x #67x #68 #65 #64 )
 3 U@            ( 14  top> #71 #68 #65 #64 )
 u2/             ( 14  top> #0x #66x #71 #68 #65 #64 )
 +                ( 15  top> #72d #71d #68 #65 #64 )
 -2  ( LIT)       ( 16  top> #73d #68 #65 #64 )
 AND              ( 16  top> #0x #0x #68 #65 #64 )
 @                ( 17  top> #74d #68 #65 #64 )
 4 U!            ( 19  top> #69 #68 #65 #64 )
 5 U!            ( 19  top> #68 #65 #64 )
 6 U!            ( 19  top> #65 #64 )
 7 U!            ( 19  top> #64 )
 ( LOOP_BEGIN)    ( 19  top> empty )
 [ 0014 ] LABEL     ( 20  top> empty )
 2 U@            ( 111  top> empty )
 @                ( 111  top> #67x )
 4 U@            ( 112  top> #75x )
 <                ( 114  top> #69x #75x )
 [ 0027 ] BRANCHZ   ( 114  top> #0x )
 ( LOOP_BEGIN)    ( 23  top> empty )
 [ 0019 ] LABEL     ( 30  top> empty )
 2 U@            ( 29  top> empty )
 2  ( LIT)       ( 29  top> #67x )
 +                ( 29  top> #0x #67x )
 DUP           ( #67)  ( 25  top> #67 )
 @_SWAP           ( 25  top> #0x #67 )
 2 U!            ( 26  top> #67 #75d )
 4 U@            ( 26  top> #75x )
 >=               ( 27  top> #69x #75x )
 [ 0019 ] BRANCHZ   ( 27  top> #0x )
 ( LOOP_END)      ( 35  top> empty )
 [ 0027 ] LABEL     ( 113  top> empty )
 5 U@            ( 107  top> empty )
 @                ( 107  top> #68x )
 4 U@            ( 108  top> #77d )
 >                ( 108  top> #69x #77d )
 [ 0026 ] BRANCHZ   ( 110  top> #0x )
 ( LOOP_BEGIN)    ( 38  top> empty )
 [ 0022 ] LABEL     ( 45  top> empty )
 5 U@            ( 44  top> empty )
 2  ( LIT)       ( 44  top> #68x )
 -                ( 44  top> #0x #68x )
 DUP           ( #68)  ( 40  top> #68 )
 @                ( 40  top> #0x #68 )
 8 U!  ( flush )   ( 41  top> #77d #68 )
 5 U!            ( 41  top> #68 )
 4 U@            ( 41  top> empty )
 8 U@            ( 41  top> #69x )
 >=               ( 42  top> #77x #69x )
 [ 0022 ] BRANCHZ   ( 42  top> #0x )
 ( LOOP_END)      ( 50  top> empty )
 [ 0026 ] LABEL     ( 109  top> empty )
 2 U@            ( 53  top> empty )
 5 U@            ( 53  top> #67x )
 U>               ( 54  top> #68x #67x )
 [ 0016 ] BRANCHNZ  ( 54  top> #0x )
 2 U@            ( 57  top> empty )
 @                ( 57  top> #67x )
 5 U@            ( 59  top> #70 )
 @                ( 59  top> #68x #70 )
 2 U@  !         ( 59  top> #0x #70 )
 5 U@  !         ( 61  top> #70d )
 2 U@            ( 64  top> empty )
 2  ( LIT)       ( 64  top> #67x )
 +                ( 64  top> #0x #67x )
 -2  ( LIT)       ( 66  top> #67 )
 5 U@ +   5 U!  ( 69  top> #0x #67 )
 2 U!            ( 69  top> #67 )
 [ 0016 ] LABEL     ( 69  top> empty )
 2 U@            ( 71  top> empty )
 5 U@            ( 71  top> #67x )
 U>               ( 72  top> #68x #67x )
 [ 0014 ] BRANCHZ   ( 72  top> #0x )
 ( LOOP_END)      ( 75  top> empty )
 6 U@            ( 78  top> empty )
 5 U@            ( 78  top> #65x )
 U<               ( 79  top> #68x #65x )
 [ 0024 ] BRANCHZ   ( 79  top> #0x )
 7 U@            ( 81  top> empty )
 6 U@            ( 82  top> #4 )
 5 U@            ( 83  top> #5 #4 )
 ( #6 Calling Arg )  ( 87  top> #6 #5 #4 )
 ( #5 Calling Arg )  ( 87  top> #5 #4 )
 ( #4 Calling Arg )  ( 87  top> #4 )
 -64 FP+!  ( Link)   ( 87  top> empty )
recurse \   Quicksort  ( CALL)    ( 87  top> empty )
 64 FP+!  ( Unlink)  ( 87  top> empty )
 [ 0024 ] LABEL     ( 89  top> empty )
 2 U@            ( 91  top> empty )
 3 U@            ( 91  top> #67x )
 U<               ( 92  top> #66x #67x )
 [ 0025 ] BRANCHZ   ( 92  top> #0x )
 7 U@            ( 94  top> empty )
 2 U@            ( 95  top> #4 )
 3 U@            ( 96  top> #5 #4 )
 ( #6 Calling Arg )  ( 100  top> #6 #5 #4 )
 ( #5 Calling Arg )  ( 100  top> #5 #4 )
 ( #4 Calling Arg )  ( 100  top> #4 )
 -64 FP+!  ( Link)   ( 100  top> empty )
recurse \    Quicksort  ( CALL)    ( 100  top> empty )
 64 FP+!  ( Unlink)  ( 100  top> empty )
 EXIT  [ 0025 ] LABEL     ( 102  top> empty )
   ;  ( END )   

 ( 103  top> empty )

( RTX 2000 code generation)

 64 FRAME_SIZE ! 

 : main  ( FUNC )   ( 3  top> empty )
#REGS 100 - REG-ADDR $FFC0 AND  UBR!
 0  ( LIT)       ( 6  top> empty )
 2 U!            ( 65  top> #64 )
 [                ( 68  top> empty )
 sortlist  ( SYMBOL)    ( 68  top> empty )
 2  ( LIT)       ( 68  top> #0x )
 +                ( 68  top> #0x #0x )
 ] LITERAL        ( 68  top> #0x )
 3 U!            ( 7  top> #66 )
 ( LOOP_BEGIN)    ( 7  top> empty )
 [ 0034 ] LABEL     ( 53  top> empty )
 -64 FP+!  ( Link)   ( 15  top> empty )
   Initarr  ( CALL)    ( 15  top> empty )
 64 FP+!  ( Unlink)  ( 15  top> empty )
 sortlist  ( SYMBOL)    ( 22  top> empty )
 [                ( 23  top> #4 )
 sortlist  ( SYMBOL)    ( 23  top> #4 )
 2  ( LIT)       ( 23  top> #0x #4 )
 +                ( 23  top> #0x #0x #4 )
 ] LITERAL        ( 23  top> #0x #4 )
 [                ( 24  top> #5 #4 )
 sortlist  ( SYMBOL)    ( 24  top> #5 #4 )
 10000  ( LIT)       ( 24  top> #0x #5 #4 )
 +                ( 24  top> #0x #0x #5 #4 )
 ] LITERAL        ( 24  top> #0x #5 #4 )
 ( #6 Calling Arg )  ( 28  top> #6 #5 #4 )
 ( #5 Calling Arg )  ( 28  top> #5 #4 )
 ( #4 Calling Arg )  ( 28  top> #4 )
 -64 FP+!  ( Link)   ( 28  top> empty )
   Quicksort  ( CALL)    ( 28  top> empty )
 64 FP+!  ( Unlink)  ( 28  top> empty )
 3 U@            ( 32  top> empty )
 @                ( 32  top> #66x )
 littlest  ( SYMBOL)    ( 33  top> #71 )
 @                ( 33  top> #0x #71 )
 -                ( 35  top> #72x #71x )
 [ 0033 ] BRANCHNZ  ( 35  top> #0x )
 [                ( 37  top> empty )
 sortlist  ( SYMBOL)    ( 37  top> empty )
 10000  ( LIT)       ( 37  top> #0x )
 +                ( 37  top> #0x #0x )
 ] LITERAL        ( 37  top> #0x )
 @                ( 37  top> #0x )
 biggest  ( SYMBOL)    ( 38  top> #74 )
 @                ( 38  top> #0x #74 )
 -                ( 40  top> #75x #74x )
 [ 0031 ] BRANCHZ   ( 40  top> #0x )
 [ 0033 ] LABEL     ( 43  top> empty )
 -64 FP+!  ( Link)   ( 46  top> empty )
   do_error  ( CALL)    ( 46  top> empty )
 64 FP+!  ( Unlink)  ( 46  top> empty )
 [ 0031 ] LABEL     ( 51  top> empty )
 2 U@            ( 52  top> empty )
 1  ( LIT)       ( 52  top> #64x )
 +                ( 52  top> #0x #64x )
 [ 2 ] DUP_U!         ( 10  top> #64 )
 49  ( LIT)       ( 10  top> #64x )
 >                ( 11  top> #65x #64x )
 [ 0034 ] BRANCHZ   ( 11  top> #0x )
 ( TYPE 1 LOOP END)  ( 58  top> empty )
 EXIT  [ 0035 ] LABEL     ( 66  top> empty )
   ;  ( END )   

 ( 60  top> empty )

.( max 49) cr
