\ gcc_compiled.:


( RTX 2000 code generation)

 64 FRAME_SIZE ! 

 : initrand  ( FUNC )   ( 3  top> empty )
 9219  ( LIT)       ( 6  top> empty )
 seed  ( SYMBOL)    ( 6  top> #0x )
 !                ( 6  top> #0x #0x )
   ;  ( END )   

 ( 6  top> empty )

( RTX 2000 code generation)

 64 FRAME_SIZE ! 

 : rand  ( FUNC )   ( 3  top> empty )
 seed  ( SYMBOL)    ( 6  top> empty )
 @                ( 6  top> #0x )
 1309  ( LIT)       ( 6  top> #0x )
 *                ( 6  top> #0x #0x )
 13849  ( LIT)       ( 8  top> #64d )
 +                ( 8  top> #0x #0x )
 seed  ( SYMBOL)    ( 10  top> #0x )
 TUCK_! ( #0)    ( 10  top> #0x #0x )
   ;  ( END )   

 ( 11  top> #2 )

( RTX 2000 code generation)

 64 FRAME_SIZE ! 

 : initarr  ( FUNC )   ( 3  top> empty )
 -64 FP+!  ( Link)   ( 7  top> empty )
   initrand  ( CALL)    ( 7  top> empty )
 64 FP+!  ( Unlink)  ( 7  top> empty )
 0  ( LIT)       ( 9  top> empty )
 biggest  ( SYMBOL)    ( 9  top> #0x )
 !                ( 9  top> #0x #0x )
 0  ( LIT)       ( 11  top> empty )
 littlest  ( SYMBOL)    ( 11  top> #0x )
 !                ( 11  top> #0x #0x )
 1  ( LIT)       ( 14  top> #64 )
 [ 0010 ADD_INDEX ] >R   ( 87  top> #64 )
 ( TYPE 1 LOOP BEGIN)  ( 15  top> empty )
 [ 0010 ] LABEL     ( 75  top> empty )
 -64 FP+!  ( Link)   ( 24  top> empty )
   rand  ( CALL)    ( 24  top> empty )
 64 FP+!  ( Unlink)  ( 24  top> #2x )
 [ 0010 ]  INDEX  ( 29  top> #67 )
 2*               ( 29  top> #64x #67 )
 [ sortlist ] SYMBOL_+  ( 30  top> #69d #67 )
 OVER          ( #67)  ( 31  top> #70 #67 )
 10000  ( LIT)       ( 31  top> #0x #70 #67 )
 /                ( 31  top> #0x #0x #70 #67 )
 10000  ( LIT)       ( 32  top> #71d #70 #67 )
 *                ( 32  top> #0x #0x #70 #67 )
 2_PICK   ( LAST #67)  ( 33  top> #72d #70 #67d )
 SWAP-            ( 33  top> #0x #72d #70 #67d )
 5000  ( LIT)       ( 35  top> #73d #70d #67d )
 -                ( 35  top> #0x #0x #70d #67d )
 SWAP !           ( 35  top> #0x #70d #67d )
 DROP             ( 35  top> #67d )
 [ 0010 ]  INDEX  ( 38  top> empty )
 2*               ( 38  top> #64x )
 [ sortlist ] SYMBOL_+  ( 39  top> #76d )
 @                ( 41  top> #77d )
 biggest  ( SYMBOL)    ( 42  top> #78 )
 @                ( 42  top> #0x #78 )
 >                ( 44  top> #79x #78x )
 [ 007 ] BRANCHZ   ( 44  top> #0x )
 [ 0010 ]  INDEX  ( 48  top> empty )
 2*               ( 48  top> #64x )
 [ sortlist ] SYMBOL_+  ( 49  top> #81d )
 @                ( 50  top> #82d )
 biggest  ( SYMBOL)    ( 50  top> #0x )
 !                ( 50  top> #0x #0x )
 [ 006 ] BRANCH    ( 51  top> empty )
 [ 007 ] LABEL     ( 53  top> empty )
 [ 0010 ]  INDEX  ( 57  top> empty )
 2*               ( 57  top> #64x )
 [ sortlist ] SYMBOL_+  ( 58  top> #84d )
 @                ( 59  top> #85d )
 littlest  ( SYMBOL)    ( 60  top> #86 )
 @                ( 60  top> #0x #86 )
 <                ( 62  top> #87x #86x )
 [ 006 ] BRANCHZ   ( 62  top> #0x )
 [ 0010 ]  INDEX  ( 66  top> empty )
 2*               ( 66  top> #64x )
 [ sortlist ] SYMBOL_+  ( 67  top> #89d )
 @                ( 68  top> #90d )
 littlest  ( SYMBOL)    ( 68  top> #0x )
 !                ( 68  top> #0x #0x )
 [ 006 ] LABEL     ( 73  top> empty )
 R>               ( 74  top> empty )
 1  ( LIT)       ( 74  top> #64x )
 +                ( 74  top> #0x #64x )
 DUP_>R   ( #64 )  ( 18  top> #64 )
 5000  ( LIT)       ( 18  top> #64x )
 U>               ( 19  top> #66x #64x )
 [ 0010 ] BRANCHZ   ( 19  top> #0x )
 [ 0010 DROP_INDEX ] R>DROP  ( 80  top> empty )
 EXIT  [ 0011 ] LABEL     ( 88  top> empty )
   ;  ( END )   

 ( 82  top> empty )

( RTX 2000 code generation)

 64 FRAME_SIZE ! 

 : quicksort  ( FUNC )   ( 3  top> empty )
 ( #4 dummy reload )  ( 4  top> empty )
 ( #5 dummy reload )  ( 5  top> #64 )
 ( #6 dummy reload )  ( 6  top> #65 #64 )
 OVER          ( #65)  ( 10  top> #66 #65 #64 )
 2 U!            ( 10  top> #67 #66 #65 #64 )
 [ 3 ] DUP_U!         ( 10  top> #66 #65 #64 )
 2 U@            ( 13  top> #68 #65 #64 )
 3 U@  +         ( 13  top> #67x #68 #65 #64 )
 4 U!            ( 16  top> #72 #68 #65 #64 )
 5 U!            ( 16  top> #68 #65 #64 )
 6 U!            ( 16  top> #65 #64 )
 7 U!            ( 16  top> #64 )
 4 U@            ( 16  top> empty )
 0<               ( 16  top> #72x )
 [ 0013 ] BRANCHZ   ( 17  top> #0x )
 1  ( LIT)       ( 18  top> empty )
 4 U@ +   4 U!  ( 19  top> #0x )
 [ 0013 ] LABEL     ( 19  top> empty )
 4 U@            ( 21  top> empty )
 -2  ( LIT)       ( 21  top> #72x )
 AND              ( 21  top> #0x #72x )
 7 U@  +         ( 22  top> #74d )
 @                ( 23  top> #75d )
 8 U!            ( 25  top> #69 )
 ( LOOP_BEGIN)    ( 25  top> empty )
 [ 0014 ] LABEL     ( 26  top> empty )
 2 U@            ( 139  top> empty )
 2*               ( 139  top> #67x )
 7 U@  +         ( 140  top> #76d )
 @                ( 141  top> #77d )
 8 U@            ( 142  top> #78x )
 <                ( 144  top> #69x #78x )
 [ 0027 ] BRANCHZ   ( 144  top> #0x )
 ( LOOP_BEGIN)    ( 29  top> empty )
 [ 0019 ] LABEL     ( 40  top> empty )
 2 U@            ( 39  top> empty )
 1  ( LIT)       ( 39  top> #67x )
 +                ( 39  top> #0x #67x )
 DUP           ( #67)  ( 31  top> #67 )
 2*               ( 31  top> #0x #67 )
 7 U@  +         ( 32  top> #76d #67 )
 @_SWAP           ( 33  top> #77d #67 )
 2 U!            ( 34  top> #67 #78d )
 8 U@            ( 34  top> #78x )
 >=               ( 35  top> #69x #78x )
 [ 0019 ] BRANCHZ   ( 35  top> #0x )
 ( LOOP_END)      ( 45  top> empty )
 [ 0027 ] LABEL     ( 143  top> empty )
 5 U@            ( 133  top> empty )
 2*               ( 133  top> #68x )
 7 U@  +         ( 134  top> #80d )
 @                ( 135  top> #81d )
 8 U@            ( 136  top> #82d )
 >                ( 136  top> #69x #82d )
 [ 0026 ] BRANCHZ   ( 138  top> #0x )
 ( LOOP_BEGIN)    ( 48  top> empty )
 [ 0022 ] LABEL     ( 59  top> empty )
 5 U@            ( 58  top> empty )
 1  ( LIT)       ( 58  top> #68x )
 -                ( 58  top> #0x #68x )
 DUP           ( #68)  ( 50  top> #68 )
 2*               ( 50  top> #0x #68 )
 7 U@  +         ( 51  top> #80d #68 )
 @                ( 52  top> #81d #68 )
 9 U!  ( flush )   ( 53  top> #82d #68 )
 5 U!            ( 53  top> #68 )
 8 U@            ( 53  top> empty )
 9 U@            ( 53  top> #69x )
 >=               ( 54  top> #82x #69x )
 [ 0022 ] BRANCHZ   ( 54  top> #0x )
 ( LOOP_END)      ( 64  top> empty )
 [ 0026 ] LABEL     ( 137  top> empty )
 2 U@            ( 67  top> empty )
 5 U@            ( 67  top> #67x )
 <=               ( 68  top> #68x #67x )
 [ 0016 ] BRANCHZ   ( 68  top> #0x )
 2 U@            ( 71  top> empty )
 2*               ( 71  top> #67x )
 7 U@  +         ( 72  top> #84d )
 @                ( 73  top> #85d )
 2 U@            ( 75  top> #70 )
 2*               ( 75  top> #67x #70 )
 7 U@  +         ( 76  top> #86d #70 )
 5 U@            ( 77  top> #87 #70 )
 2*               ( 77  top> #68x #87 #70 )
 7 U@  +         ( 78  top> #88d #87 #70 )
 @_SWAP           ( 79  top> #89d #87d #70 )
 !                ( 79  top> #87x #0x #70 )
 5 U@            ( 81  top> #70 )
 2*               ( 81  top> #68x #70 )
 7 U@  +         ( 82  top> #90d #70 )
 !                ( 83  top> #91d #70d )
 2 U@            ( 86  top> empty )
 1  ( LIT)       ( 86  top> #67x )
 +                ( 86  top> #0x #67x )
 -1  ( LIT)       ( 88  top> #67 )
 5 U@ +   5 U!  ( 91  top> #0x #67 )
 2 U!            ( 91  top> #67 )
 [ 0016 ] LABEL     ( 91  top> empty )
 2 U@            ( 93  top> empty )
 5 U@            ( 93  top> #67x )
 >                ( 94  top> #68x #67x )
 [ 0014 ] BRANCHZ   ( 94  top> #0x )
 ( LOOP_END)      ( 97  top> empty )
 6 U@            ( 100  top> empty )
 5 U@            ( 100  top> #65x )
 <                ( 101  top> #68x #65x )
 [ 0024 ] BRANCHZ   ( 101  top> #0x )
 7 U@            ( 105  top> empty )
 6 U@            ( 106  top> #4 )
 5 U@            ( 107  top> #5 #4 )
 ( #6 Calling Arg )  ( 111  top> #6 #5 #4 )
 ( #5 Calling Arg )  ( 111  top> #5 #4 )
 ( #4 Calling Arg )  ( 111  top> #4 )
 -64 FP+!  ( Link)   ( 111  top> empty )
   quicksort  ( CALL)    ( 111  top> empty )
 64 FP+!  ( Unlink)  ( 111  top> empty )
 [ 0024 ] LABEL     ( 113  top> empty )
 2 U@            ( 115  top> empty )
 3 U@            ( 115  top> #67x )
 <                ( 116  top> #66x #67x )
 [ 0025 ] BRANCHZ   ( 116  top> #0x )
 7 U@            ( 120  top> empty )
 2 U@            ( 121  top> #4 )
 3 U@            ( 122  top> #5 #4 )
 ( #6 Calling Arg )  ( 126  top> #6 #5 #4 )
 ( #5 Calling Arg )  ( 126  top> #5 #4 )
 ( #4 Calling Arg )  ( 126  top> #4 )
 -64 FP+!  ( Link)   ( 126  top> empty )
   quicksort  ( CALL)    ( 126  top> empty )
 64 FP+!  ( Unlink)  ( 126  top> empty )
 EXIT  [ 0025 ] LABEL     ( 128  top> empty )
   ;  ( END )   

 ( 129  top> empty )

( RTX 2000 code generation)

 64 FRAME_SIZE ! 

 : main  ( FUNC )   ( 3  top> empty )
 -64 FP+!  ( Link)   ( 7  top> empty )
   initarr  ( CALL)    ( 7  top> empty )
 64 FP+!  ( Unlink)  ( 7  top> empty )
 sortlist  ( SYMBOL)    ( 10  top> empty )
 1  ( LIT)       ( 11  top> #4 )
 5000  ( LIT)       ( 12  top> #5 #4 )
 ( #6 Calling Arg )  ( 16  top> #6 #5 #4 )
 ( #5 Calling Arg )  ( 16  top> #5 #4 )
 ( #4 Calling Arg )  ( 16  top> #4 )
 -64 FP+!  ( Link)   ( 16  top> empty )
   quicksort  ( CALL)    ( 16  top> empty )
 64 FP+!  ( Unlink)  ( 16  top> empty )
   ;  ( END )   

 ( 17  top> empty )
VARIABLE seed   4   CELL- ALLOT

VARIABLE top   4   CELL- ALLOT

VARIABLE littlest   4   CELL- ALLOT

VARIABLE biggest   4   CELL- ALLOT

VARIABLE sortlist   10004   CELL- ALLOT
